{"ast":null,"code":"var _jsxFileName = \"/Users/JB/Documents/TFG/frontend/src/pages/Resultado.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getResultadosByExamen } from '../services/resultadoService';\nimport './Resultado.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Resultado = () => {\n  _s();\n  const {\n    examenId\n  } = useParams();\n  const [resultado, setResultado] = useState(null);\n  const [mostrarSoloErroneas, setMostrarSoloErroneas] = useState(false);\n  useEffect(() => {\n    const fetchResultados = async () => {\n      try {\n        const data = await getResultadosByExamen(examenId);\n        setResultado(data);\n      } catch (error) {\n        console.error('Error al obtener los resultados:', error);\n      }\n    };\n    fetchResultados();\n  }, [examenId]);\n  const handleMostrarTodas = () => setMostrarSoloErroneas(false);\n  const handleMostrarErroneas = () => setMostrarSoloErroneas(true);\n  if (!resultado) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando resultados...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resultado-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Resultados del Examen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Preguntas Correctas: \", resultado.puntuacion, \" de \", resultado.total_preguntas]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Tiempo empleado: \", resultado.tiempo_empleado]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"opciones\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMostrarTodas,\n        className: !mostrarSoloErroneas ? 'active' : '',\n        children: \"Ver todas las preguntas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMostrarErroneas,\n        className: mostrarSoloErroneas ? 'active' : '',\n        children: \"Ver solo preguntas err\\xF3neas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), resultado.preguntas.map(pregunta => (!mostrarSoloErroneas || !pregunta.correcta) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `pregunta ${pregunta.correcta ? 'correcta' : 'incorrecta'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: pregunta.texto\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), pregunta.explicacion && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"explicacion\",\n        children: [\"Explicaci\\xF3n: \", pregunta.explicacion]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 38\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"opciones-list\",\n        children: pregunta.opciones.map(opcion => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: opcion.correcta ? 'correcta' : '',\n          children: [opcion.texto, \" \", opcion.correcta && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u2714\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 54\n          }, this), !opcion.correcta && pregunta.respuestaUsuario === opcion.id && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u2718\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 83\n          }, this)]\n        }, opcion.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, pregunta.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => window.location.reload(),\n      className: \"repeat-button\",\n      children: \"Repetir Examen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Resultado, \"bpU8S1WzS+wdpdk1Kb4+BLghnGY=\", false, function () {\n  return [useParams];\n});\n_c = Resultado;\nexport default Resultado;\nvar _c;\n$RefreshReg$(_c, \"Resultado\");","map":{"version":3,"names":["React","useState","useEffect","useParams","getResultadosByExamen","jsxDEV","_jsxDEV","Resultado","_s","examenId","resultado","setResultado","mostrarSoloErroneas","setMostrarSoloErroneas","fetchResultados","data","error","console","handleMostrarTodas","handleMostrarErroneas","children","fileName","_jsxFileName","lineNumber","columnNumber","className","puntuacion","total_preguntas","tiempo_empleado","onClick","preguntas","map","pregunta","correcta","texto","explicacion","opciones","opcion","respuestaUsuario","id","window","location","reload","_c","$RefreshReg$"],"sources":["/Users/JB/Documents/TFG/frontend/src/pages/Resultado.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getResultadosByExamen } from '../services/resultadoService';\nimport './Resultado.css';\n\nconst Resultado = () => {\n  const { examenId } = useParams();\n  const [resultado, setResultado] = useState(null);\n  const [mostrarSoloErroneas, setMostrarSoloErroneas] = useState(false);\n\n  useEffect(() => {\n    const fetchResultados = async () => {\n      try {\n        const data = await getResultadosByExamen(examenId);\n        setResultado(data);\n      } catch (error) {\n        console.error('Error al obtener los resultados:', error);\n      }\n    };\n\n    fetchResultados();\n  }, [examenId]);\n\n  const handleMostrarTodas = () => setMostrarSoloErroneas(false);\n  const handleMostrarErroneas = () => setMostrarSoloErroneas(true);\n\n  if (!resultado) {\n    return <div>Cargando resultados...</div>;\n  }\n\n  return (\n    <div className=\"resultado-container\">\n      <h2>Resultados del Examen</h2>\n      <p>Preguntas Correctas: {resultado.puntuacion} de {resultado.total_preguntas}</p>\n      <p>Tiempo empleado: {resultado.tiempo_empleado}</p>\n\n      <div className=\"opciones\">\n        <button onClick={handleMostrarTodas} className={!mostrarSoloErroneas ? 'active' : ''}>\n          Ver todas las preguntas\n        </button>\n        <button onClick={handleMostrarErroneas} className={mostrarSoloErroneas ? 'active' : ''}>\n          Ver solo preguntas erróneas\n        </button>\n      </div>\n\n      {resultado.preguntas.map((pregunta) => (\n        (!mostrarSoloErroneas || !pregunta.correcta) && (\n          <div key={pregunta.id} className={`pregunta ${pregunta.correcta ? 'correcta' : 'incorrecta'}`}>\n            <h3>{pregunta.texto}</h3>\n            {pregunta.explicacion && <p className=\"explicacion\">Explicación: {pregunta.explicacion}</p>}\n            <ul className=\"opciones-list\">\n              {pregunta.opciones.map((opcion) => (\n                <li key={opcion.id} className={opcion.correcta ? 'correcta' : ''}>\n                  {opcion.texto} {opcion.correcta && <span>✔</span>}\n                  {!opcion.correcta && pregunta.respuestaUsuario === opcion.id && <span>✘</span>}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )\n      ))}\n\n      <button onClick={() => window.location.reload()} className=\"repeat-button\">\n        Repetir Examen\n      </button>\n    </div>\n  );\n};\n\nexport default Resultado;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}