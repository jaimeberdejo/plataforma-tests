{"ast":null,"code":"var _jsxFileName = \"/home/jaime/Documentos/TFG/plataforma-tests/frontend/src/pages/ExamenList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport ExamenCard from '../components/ExamenCard';\nimport { getExamenes, deleteExamen } from '../services/examenService';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport './ExamenList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamenList = () => {\n  _s();\n  const [examenes, setExamenes] = useState([]);\n  const {\n    userRole\n  } = useContext(AuthContext); // Obtén el rol del usuario desde el contexto\n\n  useEffect(() => {\n    console.log(localStorage.getItem('token')); // Verifica el valor del token\n    const fetchExamenes = async () => {\n      const data = await getExamenes();\n      setExamenes(data);\n    };\n    fetchExamenes();\n  }, []);\n  const handleDelete = async id => {\n    if (window.confirm('¿Estás seguro de que deseas eliminar este examen?')) {\n      try {\n        await deleteExamen(id);\n        setExamenes(examenes.filter(examen => examen.id !== id));\n      } catch (error) {\n        console.error('Error al eliminar el examen:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"examen-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Ex\\xE1menes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), examenes.map(examen => /*#__PURE__*/_jsxDEV(ExamenCard, {\n      examen: examen,\n      handleDelete: userRole !== 'alumno' ? handleDelete : null // Solo profesor e independiente pueden eliminar\n    }, examen.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)), userRole !== 'alumno' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crear-examen-container\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/crear-examen\",\n        className: \"crear-examen-button\",\n        children: \"Crear Nuevo Examen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), userRole === 'profesor' && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/crear-examen-txt\",\n        className: \"crear-examen-txt-button\",\n        children: \"Crear Examen desde TXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamenList, \"fG0rQgn6EIGxR9MfsGLbQmn/diU=\");\n_c = ExamenList;\nexport default ExamenList;\nvar _c;\n$RefreshReg$(_c, \"ExamenList\");","map":{"version":3,"names":["React","useEffect","useState","useContext","ExamenCard","getExamenes","deleteExamen","Link","AuthContext","jsxDEV","_jsxDEV","ExamenList","_s","examenes","setExamenes","userRole","console","log","localStorage","getItem","fetchExamenes","data","handleDelete","id","window","confirm","filter","examen","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","to","_c","$RefreshReg$"],"sources":["/home/jaime/Documentos/TFG/plataforma-tests/frontend/src/pages/ExamenList.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport ExamenCard from '../components/ExamenCard';\nimport { getExamenes, deleteExamen } from '../services/examenService';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport './ExamenList.css';\n\nconst ExamenList = () => {\n  const [examenes, setExamenes] = useState([]);\n  const { userRole } = useContext(AuthContext); // Obtén el rol del usuario desde el contexto\n\n  useEffect(() => {\n    console.log(localStorage.getItem('token')); // Verifica el valor del token\n    const fetchExamenes = async () => {\n      const data = await getExamenes();\n      setExamenes(data);\n    };\n    fetchExamenes();\n  }, []);\n\n  const handleDelete = async (id) => {\n    if (window.confirm('¿Estás seguro de que deseas eliminar este examen?')) {\n      try {\n        await deleteExamen(id);\n        setExamenes(examenes.filter((examen) => examen.id !== id));\n      } catch (error) {\n        console.error('Error al eliminar el examen:', error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"examen-list\">\n      <h2>Lista de Exámenes</h2>\n      {examenes.map((examen) => (\n        <ExamenCard\n          key={examen.id}\n          examen={examen}\n          handleDelete={userRole !== 'alumno' ? handleDelete : null} // Solo profesor e independiente pueden eliminar\n        />\n      ))}\n\n      {/* Mostrar botones según el rol */}\n      {userRole !== 'alumno' && (\n        <div className=\"crear-examen-container\">\n          <Link to=\"/crear-examen\" className=\"crear-examen-button\">\n            Crear Nuevo Examen\n          </Link>\n          {userRole === 'profesor' && (\n            <Link to=\"/crear-examen-txt\" className=\"crear-examen-txt-button\">\n              Crear Examen desde TXT\n            </Link>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ExamenList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}