{"ast":null,"code":"var _jsxFileName = \"/home/jaime/Documentos/TFG/plataforma-tests/frontend/src/pages/ExamenList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport ExamenCard from '../components/ExamenCard';\nimport { getExamenesByUser, deleteExamen } from '../services/examenService';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport './ExamenList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamenList = () => {\n  _s();\n  const [examenes, setExamenes] = useState([]);\n  const {\n    userRole,\n    userId\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchExamenes = async () => {\n      if (userId) {\n        try {\n          const data = await getExamenesByUser(userId);\n          setExamenes(data);\n        } catch (error) {\n          console.error('Error al obtener los exámenes:', error);\n        }\n      }\n    };\n    fetchExamenes();\n  }, [userId]);\n  const handleDelete = async id => {\n    const confirmDelete = window.confirm('¿Estás seguro de que deseas eliminar este examen?');\n    if (confirmDelete) {\n      try {\n        await deleteExamen(id);\n        setExamenes(prevExamenes => prevExamenes.filter(examen => examen.id !== id));\n      } catch (error) {\n        console.error('Error al eliminar el examen:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"examen-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Ex\\xE1menes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), examenes.length > 0 ? examenes.map(examen => /*#__PURE__*/_jsxDEV(ExamenCard, {\n      examen: examen,\n      handleDelete: userRole !== 'alumno' ? handleDelete : null\n    }, examen.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No se encontraron ex\\xE1menes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), userRole !== 'alumno' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crear-examen-container\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/crear-examen\",\n        className: \"crear-examen-button\",\n        children: \"Crear Nuevo Examen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), userRole === 'profesor' && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/crear-examen-txt\",\n        className: \"crear-examen-txt-button\",\n        children: \"Crear Examen desde TXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamenList, \"6YZ+tSRM/+0vgFolj/9IIz6wKIw=\");\n_c = ExamenList;\nexport default ExamenList;\nvar _c;\n$RefreshReg$(_c, \"ExamenList\");","map":{"version":3,"names":["React","useEffect","useState","useContext","ExamenCard","getExamenesByUser","deleteExamen","Link","AuthContext","jsxDEV","_jsxDEV","ExamenList","_s","examenes","setExamenes","userRole","userId","fetchExamenes","data","error","console","handleDelete","id","confirmDelete","window","confirm","prevExamenes","filter","examen","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","to","_c","$RefreshReg$"],"sources":["/home/jaime/Documentos/TFG/plataforma-tests/frontend/src/pages/ExamenList.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport ExamenCard from '../components/ExamenCard';\nimport { getExamenesByUser, deleteExamen } from '../services/examenService';\nimport { Link } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport './ExamenList.css';\n\nconst ExamenList = () => {\n  const [examenes, setExamenes] = useState([]);\n  const { userRole, userId } = useContext(AuthContext);\n\n  useEffect(() => {\n    const fetchExamenes = async () => {\n      if (userId) {\n        try {\n          const data = await getExamenesByUser(userId);\n          setExamenes(data);\n        } catch (error) {\n          console.error('Error al obtener los exámenes:', error);\n        }\n      }\n    };\n    fetchExamenes();\n  }, [userId]);\n\n  const handleDelete = async (id) => {\n    const confirmDelete = window.confirm('¿Estás seguro de que deseas eliminar este examen?');\n    if (confirmDelete) {\n      try {\n        await deleteExamen(id);\n        setExamenes((prevExamenes) => prevExamenes.filter((examen) => examen.id !== id));\n      } catch (error) {\n        console.error('Error al eliminar el examen:', error);\n      }\n    }\n  };\n\n  return (\n    <div className=\"examen-list\">\n      <h2>Lista de Exámenes</h2>\n      {examenes.length > 0 ? (\n        examenes.map((examen) => (\n          <ExamenCard\n            key={examen.id}\n            examen={examen}\n            handleDelete={userRole !== 'alumno' ? handleDelete : null}\n          />\n        ))\n      ) : (\n        <p>No se encontraron exámenes.</p>\n      )}\n\n      {/* Mostrar botones de creación de examen según el rol */}\n      {userRole !== 'alumno' && (\n        <div className=\"crear-examen-container\">\n          <Link to=\"/crear-examen\" className=\"crear-examen-button\">\n            Crear Nuevo Examen\n          </Link>\n          {userRole === 'profesor' && (\n            <Link to=\"/crear-examen-txt\" className=\"crear-examen-txt-button\">\n              Crear Examen desde TXT\n            </Link>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ExamenList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}