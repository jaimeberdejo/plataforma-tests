{"ast":null,"code":"// src/services/examenService.js\n\nimport axios from 'axios';\nconst API_URL = 'http://127.0.0.1:8000/gestion/api/';\nexport const getExamenes = async () => {\n  const response = await axios.get(`${API_URL}examenes/`);\n  return response.data;\n};\n\n// export const getExamenById = async (id) => {\n//   const response = await axios.get(`${API_URL}examenes/${id}/`);\n//   return response.data;\n// };\n\nexport const getExamenById = async id => {\n  try {\n    const response = await fetch(`/api/examenes/${id}/`);\n    if (!response.ok) {\n      throw new Error('No se pudo obtener el examen');\n    }\n    const examen = await response.json();\n    return examen;\n  } catch (error) {\n    console.error('Error al obtener el examen:', error);\n  }\n};\nexport const createExamen = async examenData => {\n  const response = await axios.post(`${API_URL}examenes/`, examenData);\n  return response.data;\n};\nexport const updateExamen = async (id, examenData) => {\n  const response = await axios.put(`${API_URL}examenes/${id}/`, examenData);\n  return response.data;\n};\nexport const getPreguntasExamen = async id => {\n  const response = await axios.get(`${API_URL}examenes/${id}/preguntas/`);\n  return response.data;\n};\nexport const enviarRespuestas = async (id, respuestas) => {\n  const response = await axios.post(`${API_URL}examenes/${id}/responder/`, respuestas);\n  return response.data;\n};\nexport const getCorreccionExamen = async id => {\n  const response = await axios.get(`${API_URL}examenes/${id}/correccion/`);\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","getExamenes","response","get","data","getExamenById","id","fetch","ok","Error","examen","json","error","console","createExamen","examenData","post","updateExamen","put","getPreguntasExamen","enviarRespuestas","respuestas","getCorreccionExamen"],"sources":["/Users/JB/Documents/TFG/frontend/src/services/examenService.js"],"sourcesContent":["// src/services/examenService.js\n\nimport axios from 'axios';\n\nconst API_URL = 'http://127.0.0.1:8000/gestion/api/';\n\nexport const getExamenes = async () => {\n  const response = await axios.get(`${API_URL}examenes/`);\n  return response.data;\n};\n\n// export const getExamenById = async (id) => {\n//   const response = await axios.get(`${API_URL}examenes/${id}/`);\n//   return response.data;\n// };\n\nexport const getExamenById = async (id) => {\n  try {\n    const response = await fetch(`/api/examenes/${id}/`);\n    if (!response.ok) {\n      throw new Error('No se pudo obtener el examen');\n    }\n    const examen = await response.json();\n    return examen;\n  } catch (error) {\n    console.error('Error al obtener el examen:', error);\n  }\n};\n\n\nexport const createExamen = async (examenData) => {\n  const response = await axios.post(`${API_URL}examenes/`, examenData);\n  return response.data;\n};\n\nexport const updateExamen = async (id, examenData) => {\n  const response = await axios.put(`${API_URL}examenes/${id}/`, examenData);\n  return response.data;\n};\n\nexport const getPreguntasExamen = async (id) => {\n  const response = await axios.get(`${API_URL}examenes/${id}/preguntas/`);\n  return response.data;\n};\n\nexport const enviarRespuestas = async (id, respuestas) => {\n  const response = await axios.post(`${API_URL}examenes/${id}/responder/`, respuestas);\n  return response.data;\n};\n\nexport const getCorreccionExamen = async (id) => {\n  const response = await axios.get(`${API_URL}examenes/${id}/correccion/`);\n  return response.data;\n};\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,oCAAoC;AAEpD,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,WAAW,CAAC;EACvD,OAAOE,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAOC,EAAE,IAAK;EACzC,IAAI;IACF,MAAMJ,QAAQ,GAAG,MAAMK,KAAK,CAAC,iBAAiBD,EAAE,GAAG,CAAC;IACpD,IAAI,CAACJ,QAAQ,CAACM,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;IACjD;IACA,MAAMC,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;IACpC,OAAOD,MAAM;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;EACrD;AACF,CAAC;AAGD,OAAO,MAAME,YAAY,GAAG,MAAOC,UAAU,IAAK;EAChD,MAAMb,QAAQ,GAAG,MAAMH,KAAK,CAACiB,IAAI,CAAC,GAAGhB,OAAO,WAAW,EAAEe,UAAU,CAAC;EACpE,OAAOb,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMa,YAAY,GAAG,MAAAA,CAAOX,EAAE,EAAES,UAAU,KAAK;EACpD,MAAMb,QAAQ,GAAG,MAAMH,KAAK,CAACmB,GAAG,CAAC,GAAGlB,OAAO,YAAYM,EAAE,GAAG,EAAES,UAAU,CAAC;EACzE,OAAOb,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMe,kBAAkB,GAAG,MAAOb,EAAE,IAAK;EAC9C,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,YAAYM,EAAE,aAAa,CAAC;EACvE,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMgB,gBAAgB,GAAG,MAAAA,CAAOd,EAAE,EAAEe,UAAU,KAAK;EACxD,MAAMnB,QAAQ,GAAG,MAAMH,KAAK,CAACiB,IAAI,CAAC,GAAGhB,OAAO,YAAYM,EAAE,aAAa,EAAEe,UAAU,CAAC;EACpF,OAAOnB,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMkB,mBAAmB,GAAG,MAAOhB,EAAE,IAAK;EAC/C,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,YAAYM,EAAE,cAAc,CAAC;EACxE,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}