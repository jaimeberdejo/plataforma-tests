{"ast":null,"code":"var _jsxFileName = \"/home/jaime/Documentos/TFG/plataforma-tests/frontend/src/pages/CrearPregunta.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createPregunta } from '../services/preguntaService';\nimport './PreguntaForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CrearPregunta = ({\n  examenId,\n  closeModal,\n  refreshPreguntas\n}) => {\n  _s();\n  const [descripcion, setDescripcion] = useState('');\n  const [explicacion, setExplicacion] = useState('');\n  const [opciones, setOpciones] = useState(['', '']);\n  const [respuestaCorrecta, setRespuestaCorrecta] = useState('');\n  const handleChangeOpcion = (index, value) => {\n    const newOpciones = [...opciones];\n    newOpciones[index] = value;\n    setOpciones(newOpciones);\n  };\n  const addOpcion = () => setOpciones([...opciones, '']);\n  const removeOpcion = index => {\n    if (opciones.length > 2) {\n      const newOpciones = opciones.filter((_, i) => i !== index);\n      setOpciones(newOpciones);\n      if (opciones[index] === respuestaCorrecta) {\n        setRespuestaCorrecta('');\n      }\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const opcionesData = opciones.map(texto => ({\n      texto,\n      es_correcta: texto === respuestaCorrecta\n    }));\n    const preguntaData = {\n      texto: descripcion,\n      opciones: opcionesData,\n      examen: examenId,\n      explicacion: explicacion\n    };\n    try {\n      await createPregunta(preguntaData);\n      refreshPreguntas(); // Refresca las preguntas en PreguntaList\n      closeModal(); // Cierra el modal\n    } catch (error) {\n      console.error('Error al crear la pregunta:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pregunta-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Crear Nueva Pregunta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"pregunta-form\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Crear Pregunta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(CrearPregunta, \"+bdkwKNbefUjJaKtHbPHQdhdwOg=\");\n_c = CrearPregunta;\nexport default CrearPregunta;\nvar _c;\n$RefreshReg$(_c, \"CrearPregunta\");","map":{"version":3,"names":["React","useState","createPregunta","jsxDEV","_jsxDEV","CrearPregunta","examenId","closeModal","refreshPreguntas","_s","descripcion","setDescripcion","explicacion","setExplicacion","opciones","setOpciones","respuestaCorrecta","setRespuestaCorrecta","handleChangeOpcion","index","value","newOpciones","addOpcion","removeOpcion","length","filter","_","i","handleSubmit","e","preventDefault","opcionesData","map","texto","es_correcta","preguntaData","examen","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","_c","$RefreshReg$"],"sources":["/home/jaime/Documentos/TFG/plataforma-tests/frontend/src/pages/CrearPregunta.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { createPregunta } from '../services/preguntaService';\nimport './PreguntaForm.css';\n\nconst CrearPregunta = ({ examenId, closeModal, refreshPreguntas }) => {\n  const [descripcion, setDescripcion] = useState('');\n  const [explicacion, setExplicacion] = useState('');\n  const [opciones, setOpciones] = useState(['', '']);\n  const [respuestaCorrecta, setRespuestaCorrecta] = useState('');\n\n  const handleChangeOpcion = (index, value) => {\n    const newOpciones = [...opciones];\n    newOpciones[index] = value;\n    setOpciones(newOpciones);\n  };\n\n  const addOpcion = () => setOpciones([...opciones, '']);\n\n  const removeOpcion = (index) => {\n    if (opciones.length > 2) {\n      const newOpciones = opciones.filter((_, i) => i !== index);\n      setOpciones(newOpciones);\n      if (opciones[index] === respuestaCorrecta) {\n        setRespuestaCorrecta('');\n      }\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const opcionesData = opciones.map((texto) => ({\n      texto,\n      es_correcta: texto === respuestaCorrecta,\n    }));\n\n    const preguntaData = {\n      texto: descripcion,\n      opciones: opcionesData,\n      examen: examenId,\n      explicacion: explicacion,\n    };\n\n    try {\n      await createPregunta(preguntaData);\n      refreshPreguntas();  // Refresca las preguntas en PreguntaList\n      closeModal();  // Cierra el modal\n    } catch (error) {\n      console.error('Error al crear la pregunta:', error);\n    }\n  };\n\n  return (\n    <div className=\"pregunta-form-container\">\n      <h2>Crear Nueva Pregunta</h2>\n      <form onSubmit={handleSubmit} className=\"pregunta-form\">\n        {/* Campos del formulario */}\n        <button type=\"submit\" className=\"submit-button\">Crear Pregunta</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CrearPregunta;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}