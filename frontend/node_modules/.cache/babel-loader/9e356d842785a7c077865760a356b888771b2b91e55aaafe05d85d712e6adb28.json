{"ast":null,"code":"var _jsxFileName = \"/Users/JB/Documents/TFG/frontend/src/pages/ExamenList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ExamenCard from '../components/ExamenCard';\nimport { getExamenes, deleteExamen } from '../services/examenService'; // Asegúrate de importar deleteExamen\nimport { Link } from 'react-router-dom'; // Importa Link para la navegación\nimport './ExamenList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamenList = () => {\n  _s();\n  const [examenes, setExamenes] = useState([]);\n  const [initialOrder, setInitialOrder] = useState([]); // Para mantener el orden original\n\n  useEffect(() => {\n    const fetchExamenes = async () => {\n      const data = await getExamenes();\n      setExamenes(data);\n\n      // Almacenar el orden inicial basado en los IDs\n      const order = data.map(examen => examen.id);\n      setInitialOrder(order);\n    };\n    fetchExamenes();\n  }, []);\n  const handleDelete = async id => {\n    if (window.confirm('¿Estás seguro de que deseas eliminar este examen?')) {\n      try {\n        await deleteExamen(id); // Llama al servicio para eliminar el examen\n        setExamenes(examenes.filter(examen => examen.id !== id)); // Actualiza el estado\n      } catch (error) {\n        console.error('Error al eliminar el examen:', error);\n      }\n    }\n  };\n  const getOrderedExamenes = () => {\n    // Ordenar exámenes basados en el orden inicial\n    return initialOrder.map(id => examenes.find(examen => examen.id === id)).filter(examen => examen); // Filtrar los exámenes eliminados\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"examen-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Ex\\xE1menes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), getOrderedExamenes().map(examen => /*#__PURE__*/_jsxDEV(ExamenCard, {\n      examen: examen,\n      handleDelete: handleDelete\n    }, examen.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crear-examen-container\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/crear-examen\",\n        className: \"crear-examen-button\",\n        children: \"Crear Nuevo Examen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamenList, \"imVR0fQUQsFLuYto0ACcHsGzKK0=\");\n_c = ExamenList;\nexport default ExamenList;\nvar _c;\n$RefreshReg$(_c, \"ExamenList\");","map":{"version":3,"names":["React","useEffect","useState","ExamenCard","getExamenes","deleteExamen","Link","jsxDEV","_jsxDEV","ExamenList","_s","examenes","setExamenes","initialOrder","setInitialOrder","fetchExamenes","data","order","map","examen","id","handleDelete","window","confirm","filter","error","console","getOrderedExamenes","find","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/Users/JB/Documents/TFG/frontend/src/pages/ExamenList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ExamenCard from '../components/ExamenCard';\nimport { getExamenes, deleteExamen } from '../services/examenService'; // Asegúrate de importar deleteExamen\nimport { Link } from 'react-router-dom'; // Importa Link para la navegación\nimport './ExamenList.css';\n\nconst ExamenList = () => {\n  const [examenes, setExamenes] = useState([]);\n  const [initialOrder, setInitialOrder] = useState([]); // Para mantener el orden original\n\n  useEffect(() => {\n    const fetchExamenes = async () => {\n      const data = await getExamenes();\n      setExamenes(data);\n\n      // Almacenar el orden inicial basado en los IDs\n      const order = data.map((examen) => examen.id);\n      setInitialOrder(order);\n    };\n    fetchExamenes();\n  }, []);\n\n  const handleDelete = async (id) => {\n    if (window.confirm('¿Estás seguro de que deseas eliminar este examen?')) {\n      try {\n        await deleteExamen(id); // Llama al servicio para eliminar el examen\n        setExamenes(examenes.filter((examen) => examen.id !== id)); // Actualiza el estado\n      } catch (error) {\n        console.error('Error al eliminar el examen:', error);\n      }\n    }\n  };\n\n  const getOrderedExamenes = () => {\n    // Ordenar exámenes basados en el orden inicial\n    return initialOrder\n      .map((id) => examenes.find((examen) => examen.id === id))\n      .filter((examen) => examen); // Filtrar los exámenes eliminados\n  };\n\n  return (\n    <div className=\"examen-list\">\n      <h2>Lista de Exámenes</h2>\n      {getOrderedExamenes().map((examen) => (\n        <ExamenCard key={examen.id} examen={examen} handleDelete={handleDelete} />\n      ))}\n\n      {/* Botón Crear Examen */}\n      <div className=\"crear-examen-container\">\n        <Link to=\"/crear-examen\" className=\"crear-examen-button\">\n          Crear Nuevo Examen\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ExamenList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}