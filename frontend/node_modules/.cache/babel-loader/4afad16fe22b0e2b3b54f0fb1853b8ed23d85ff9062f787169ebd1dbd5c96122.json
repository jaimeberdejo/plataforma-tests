{"ast":null,"code":"// src/services/examenService.js\n\nimport axios from 'axios';\nconst API_URL = 'http://127.0.0.1:8000/gestion/api/';\nexport const getExamenes = async () => {\n  const token = localStorage.getItem('token');\n  try {\n    const response = await axios.get('http://127.0.0.1:8000/gestion/api/examenes/', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener los exámenes:', error);\n    throw error;\n  }\n};\nexport const getExamenById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}examenes/${id}/`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener el examen:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const createExamen = async examenData => {\n  try {\n    const response = await axios.post(`${API_URL}examenes/`, examenData);\n    return response.data;\n  } catch (error) {\n    console.error('Error en la creación del examen:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const updateExamen = async (id, examenData) => {\n  try {\n    const response = await axios.put(`${API_URL}examenes/${id}/`, examenData);\n    return response.data;\n  } catch (error) {\n    console.error('Error en la actualización del examen:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const deleteExamen = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}examenes/${id}/`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al eliminar el examen:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const getPreguntasByExamen = async examenId => {\n  try {\n    const response = await axios.get(`${API_URL}examenes/${examenId}/preguntas`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener las preguntas:\", error.response ? error.response.data : error.message);\n    return {\n      data: []\n    }; // Devuelve un array vacío en caso de error\n  }\n};\nexport const getResultadoExamen = async resultadoId => {\n  return await axios.get(`${API_URL}resultados/${resultadoId}/`);\n};\nexport const enviarRespuestas = async (examenId, respuestasJSON) => {\n  try {\n    const response = await axios.post(`http://localhost:8000/gestion/api/examenes/${examenId}/resultados/`, respuestasJSON, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error al enviar las respuestas:', error);\n    throw error;\n  }\n};\nexport const uploadTxtExamen = async formData => {\n  return axios.post('http://localhost:8000/gestion/api/uploadtxt/', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};","map":{"version":3,"names":["axios","API_URL","getExamenes","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","getExamenById","id","message","createExamen","examenData","post","updateExamen","put","deleteExamen","delete","getPreguntasByExamen","examenId","getResultadoExamen","resultadoId","enviarRespuestas","respuestasJSON","uploadTxtExamen","formData"],"sources":["/home/jaime/Documentos/TFG/plataforma-tests/frontend/src/services/examenService.js"],"sourcesContent":["// src/services/examenService.js\n\nimport axios from 'axios';\n\nconst API_URL = 'http://127.0.0.1:8000/gestion/api/';\n\n\n\nexport const getExamenes = async () => {\n  const token = localStorage.getItem('token');\n  try {\n    const response = await axios.get('http://127.0.0.1:8000/gestion/api/examenes/', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener los exámenes:', error);\n    throw error;\n  }\n};\n\nexport const getExamenById = async (id) => {\n  try {\n    const response = await axios.get(`${API_URL}examenes/${id}/`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener el examen:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\nexport const createExamen = async (examenData) => {\n  try {\n    const response = await axios.post(`${API_URL}examenes/`, examenData);\n    return response.data;\n  } catch (error) {\n    console.error('Error en la creación del examen:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\nexport const updateExamen = async (id, examenData) => {\n  try {\n    const response = await axios.put(`${API_URL}examenes/${id}/`, examenData);\n    return response.data;\n  } catch (error) {\n    console.error('Error en la actualización del examen:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\nexport const deleteExamen = async (id) => {\n  try {\n    const response = await axios.delete(`${API_URL}examenes/${id}/`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al eliminar el examen:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\nexport const getPreguntasByExamen = async (examenId) => {\n  try {\n    const response = await axios.get(`${API_URL}examenes/${examenId}/preguntas`);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener las preguntas:\", error.response ? error.response.data : error.message);\n    return { data: [] }; // Devuelve un array vacío en caso de error\n  }\n};\n\n\nexport const getResultadoExamen = async (resultadoId) => {\n  return await axios.get(`${API_URL}resultados/${resultadoId}/`);\n};\n\n\n\n\nexport const enviarRespuestas = async (examenId, respuestasJSON) => {\n  try {\n    const response = await axios.post(`http://localhost:8000/gestion/api/examenes/${examenId}/resultados/`, respuestasJSON, {\n      headers: {\n        'Content-Type': 'application/json', \n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error al enviar las respuestas:', error);\n    throw error;\n  }\n};\n\n\n\nexport const uploadTxtExamen = async (formData) => {\n  return axios.post('http://localhost:8000/gestion/api/uploadtxt/', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}