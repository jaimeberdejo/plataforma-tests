{"ast":null,"code":"// src/services/examenService.js\n\nimport axios from 'axios';\nconst API_URL = 'http://127.0.0.1:8000/gestion/api/';\nexport const getExamenes = async () => {\n  const response = await axios.get(`${API_URL}examenes/`);\n  return response.data;\n};\nexport const getExamenById = async id => {\n  return await axios.get(`${API_URL}examenes/${id}/`);\n};\nexport const createExamen = async examenData => {\n  try {\n    const response = await axios.post(`${API_URL}examenes/`, examenData);\n    return response.data;\n  } catch (error) {\n    console.error('Error en la creación del examen:', error.response.data); // Mostrar detalles del error\n    throw error;\n  }\n};\nexport const updateExamen = async (id, examenData) => {\n  const response = await axios.put(`${API_URL}examenes/${id}/`, examenData);\n  return response.data;\n};\n\n// Eliminar un examen\nexport const deleteExamen = async id => {\n  return await axios.delete(`${API_URL}examenes/${id}/`);\n};\nexport const getPreguntasByExamen = async examenId => {\n  try {\n    const response = await axios.get(`http://localhost:8000/gestion/api/examenes/${examenId}/preguntas`);\n    return response; // Asegúrate de que estás devolviendo los datos de la API correctamente\n  } catch (error) {\n    console.error(\"Error al obtener las preguntas:\", error);\n    return {\n      data: []\n    }; // Devuelve un array vacío en caso de error\n  }\n};\nexport const enviarRespuestas = async (id, respuestas) => {\n  const response = await axios.post(`${API_URL}examenes/${id}/responder/`, respuestas);\n  return response.data;\n};\nexport const getCorreccionExamen = async id => {\n  const response = await axios.get(`${API_URL}examenes/${id}/correccion/`);\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","getExamenes","response","get","data","getExamenById","id","createExamen","examenData","post","error","console","updateExamen","put","deleteExamen","delete","getPreguntasByExamen","examenId","enviarRespuestas","respuestas","getCorreccionExamen"],"sources":["/Users/JB/Documents/TFG/frontend/src/services/examenService.js"],"sourcesContent":["// src/services/examenService.js\n\nimport axios from 'axios';\n\nconst API_URL = 'http://127.0.0.1:8000/gestion/api/';\n\nexport const getExamenes = async () => {\n  const response = await axios.get(`${API_URL}examenes/`);\n  return response.data;\n};\n\n\n\n\nexport const getExamenById = async (id) => {\n  return await axios.get(`${API_URL}examenes/${id}/`);\n};\n\n\nexport const createExamen = async (examenData) => {\n  try {\n    const response = await axios.post(`${API_URL}examenes/`, examenData);\n    return response.data;\n  } catch (error) {\n    console.error('Error en la creación del examen:', error.response.data);  // Mostrar detalles del error\n    throw error;\n  }\n};\n\nexport const updateExamen = async (id, examenData) => {\n  const response = await axios.put(`${API_URL}examenes/${id}/`, examenData);\n  return response.data;\n};\n\n// Eliminar un examen\nexport const deleteExamen = async (id) => {\n  return await axios.delete(`${API_URL}examenes/${id}/`);\n};\n\nexport const getPreguntasByExamen = async (examenId) => {\n  try {\n    const response = await axios.get(`http://localhost:8000/gestion/api/examenes/${examenId}/preguntas`);\n    return response; // Asegúrate de que estás devolviendo los datos de la API correctamente\n  } catch (error) {\n    console.error(\"Error al obtener las preguntas:\", error);\n    return { data: [] }; // Devuelve un array vacío en caso de error\n  }\n};\n\nexport const enviarRespuestas = async (id, respuestas) => {\n  const response = await axios.post(`${API_URL}examenes/${id}/responder/`, respuestas);\n  return response.data;\n};\n\nexport const getCorreccionExamen = async (id) => {\n  const response = await axios.get(`${API_URL}examenes/${id}/correccion/`);\n  return response.data;\n};\n\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,oCAAoC;AAEpD,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,WAAW,CAAC;EACvD,OAAOE,QAAQ,CAACE,IAAI;AACtB,CAAC;AAKD,OAAO,MAAMC,aAAa,GAAG,MAAOC,EAAE,IAAK;EACzC,OAAO,MAAMP,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,YAAYM,EAAE,GAAG,CAAC;AACrD,CAAC;AAGD,OAAO,MAAMC,YAAY,GAAG,MAAOC,UAAU,IAAK;EAChD,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAAC,GAAGT,OAAO,WAAW,EAAEQ,UAAU,CAAC;IACpE,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAACR,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAE;IACzE,MAAMM,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAAA,CAAON,EAAE,EAAEE,UAAU,KAAK;EACpD,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACc,GAAG,CAAC,GAAGb,OAAO,YAAYM,EAAE,GAAG,EAAEE,UAAU,CAAC;EACzE,OAAON,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMU,YAAY,GAAG,MAAOR,EAAE,IAAK;EACxC,OAAO,MAAMP,KAAK,CAACgB,MAAM,CAAC,GAAGf,OAAO,YAAYM,EAAE,GAAG,CAAC;AACxD,CAAC;AAED,OAAO,MAAMU,oBAAoB,GAAG,MAAOC,QAAQ,IAAK;EACtD,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,8CAA8Cc,QAAQ,YAAY,CAAC;IACpG,OAAOf,QAAQ,CAAC,CAAC;EACnB,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,OAAO;MAAEN,IAAI,EAAE;IAAG,CAAC,CAAC,CAAC;EACvB;AACF,CAAC;AAED,OAAO,MAAMc,gBAAgB,GAAG,MAAAA,CAAOZ,EAAE,EAAEa,UAAU,KAAK;EACxD,MAAMjB,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAAC,GAAGT,OAAO,YAAYM,EAAE,aAAa,EAAEa,UAAU,CAAC;EACpF,OAAOjB,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMgB,mBAAmB,GAAG,MAAOd,EAAE,IAAK;EAC/C,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,YAAYM,EAAE,cAAc,CAAC;EACxE,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}