{"ast":null,"code":"import axios from 'axios';\naxios.defaults.baseURL = 'http://127.0.0.1:8000/gestion/api'; // Configura la URL base de Axios\n\nexport const getUserData = async userId => {\n  try {\n    const response = await axios.get(`/usuarios/${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener los datos del usuario:', error);\n    throw error;\n  }\n};\nexport const updateUserData = async (userId, data) => {\n  try {\n    const response = await axios.put(`/usuarios/${userId}/`, data);\n    return response.data;\n  } catch (error) {\n    console.error('Error al actualizar los datos del usuario:', error);\n    throw error;\n  }\n};\nexport const updatePassword = async (userId, currentPassword, newPassword) => {\n  try {\n    const response = await axios.put(`/usuarios/${userId}/password/`, {\n      current_password: currentPassword,\n      new_password: newPassword\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error al actualizar la contraseña:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","defaults","baseURL","getUserData","userId","response","get","data","error","console","updateUserData","put","updatePassword","currentPassword","newPassword","current_password","new_password"],"sources":["/home/jaime/Documentos/TFG/plataforma-tests/frontend/src/services/userService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://127.0.0.1:8000/gestion/api'; // Configura la URL base de Axios\r\n\r\nexport const getUserData = async (userId) => {\r\n  try {\r\n    const response = await axios.get(`/usuarios/${userId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al obtener los datos del usuario:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateUserData = async (userId, data) => {\r\n  try {\r\n    const response = await axios.put(`/usuarios/${userId}/`, data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al actualizar los datos del usuario:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updatePassword = async (userId, currentPassword, newPassword) => {\r\n  try {\r\n    const response = await axios.put(`/usuarios/${userId}/password/`, {\r\n      current_password: currentPassword,\r\n      new_password: newPassword,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error al actualizar la contraseña:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzBA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,mCAAmC,CAAC,CAAC;;AAE9D,OAAO,MAAMC,WAAW,GAAG,MAAOC,MAAM,IAAK;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,aAAaF,MAAM,EAAE,CAAC;IACvD,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IAC/D,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,cAAc,GAAG,MAAAA,CAAON,MAAM,EAAEG,IAAI,KAAK;EACpD,IAAI;IACF,MAAMF,QAAQ,GAAG,MAAML,KAAK,CAACW,GAAG,CAAC,aAAaP,MAAM,GAAG,EAAEG,IAAI,CAAC;IAC9D,OAAOF,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;IAClE,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMI,cAAc,GAAG,MAAAA,CAAOR,MAAM,EAAES,eAAe,EAAEC,WAAW,KAAK;EAC5E,IAAI;IACF,MAAMT,QAAQ,GAAG,MAAML,KAAK,CAACW,GAAG,CAAC,aAAaP,MAAM,YAAY,EAAE;MAChEW,gBAAgB,EAAEF,eAAe;MACjCG,YAAY,EAAEF;IAChB,CAAC,CAAC;IACF,OAAOT,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}