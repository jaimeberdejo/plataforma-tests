{"ast":null,"code":"var _jsxFileName = \"/Users/JB/Documents/TFG/frontend/src/pages/CrearPregunta.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { createPregunta } from '../services/preguntaService';\nimport './PreguntaForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CrearPregunta = () => {\n  _s();\n  const {\n    examenId\n  } = useParams();\n  const navigate = useNavigate();\n  const [descripcion, setDescripcion] = useState('');\n  const [explicacion, setExplicacion] = useState(''); // Nuevo campo de explicación\n  const [opciones, setOpciones] = useState(['', '']); // Al menos dos opciones por defecto\n  const [respuestaCorrecta, setRespuestaCorrecta] = useState('');\n  const handleChangeOpcion = (index, value) => {\n    const newOpciones = [...opciones];\n    newOpciones[index] = value;\n    setOpciones(newOpciones);\n  };\n  const addOpcion = () => {\n    setOpciones([...opciones, '']);\n  };\n  const removeOpcion = index => {\n    if (opciones.length > 2) {\n      const newOpciones = opciones.filter((_, i) => i !== index);\n      setOpciones(newOpciones);\n      if (opciones[index] === respuestaCorrecta) {\n        setRespuestaCorrecta('');\n      }\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const opcionesData = opciones.map(texto => ({\n      texto,\n      es_correcta: texto === respuestaCorrecta\n    }));\n    const preguntaData = {\n      texto: descripcion,\n      explicacion: explicacion,\n      // Enviar la explicación\n      opciones: opcionesData,\n      examen: examenId\n    };\n    try {\n      await createPregunta(preguntaData);\n      navigate(`/examenes/${examenId}/preguntas`);\n    } catch (error) {\n      console.error('Error al crear la pregunta:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pregunta-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Crear Nueva Pregunta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"pregunta-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Descripci\\xF3n de la Pregunta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: descripcion,\n          onChange: e => setDescripcion(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Opciones de Respuesta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), opciones.map((opcion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"opcion\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: opcion,\n            onChange: e => handleChangeOpcion(index, e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), opciones.length > 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"remove-opcion-button\",\n            onClick: () => removeOpcion(index),\n            children: \"Eliminar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addOpcion,\n          className: \"add-opcion-button\",\n          children: \"A\\xF1adir Opci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Respuesta Correcta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: respuestaCorrecta,\n          onChange: e => setRespuestaCorrecta(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleccione una opci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), opciones.map((opcion, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: opcion,\n            children: opcion\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Explicaci\\xF3n (opcional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: explicacion,\n          onChange: e => setExplicacion(e.target.value) // Campo de texto para explicación\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Crear Pregunta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(CrearPregunta, \"78/9bruSO5ThwlW0nqgUhbkx8Qg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CrearPregunta;\nexport default CrearPregunta;\nvar _c;\n$RefreshReg$(_c, \"CrearPregunta\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","createPregunta","jsxDEV","_jsxDEV","CrearPregunta","_s","examenId","navigate","descripcion","setDescripcion","explicacion","setExplicacion","opciones","setOpciones","respuestaCorrecta","setRespuestaCorrecta","handleChangeOpcion","index","value","newOpciones","addOpcion","removeOpcion","length","filter","_","i","handleSubmit","e","preventDefault","opcionesData","map","texto","es_correcta","preguntaData","examen","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","target","required","opcion","type","onClick","_c","$RefreshReg$"],"sources":["/Users/JB/Documents/TFG/frontend/src/pages/CrearPregunta.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { createPregunta } from '../services/preguntaService';\nimport './PreguntaForm.css';\n\nconst CrearPregunta = () => {\n  const { examenId } = useParams();\n  const navigate = useNavigate();\n\n  const [descripcion, setDescripcion] = useState('');\n  const [explicacion, setExplicacion] = useState(''); // Nuevo campo de explicación\n  const [opciones, setOpciones] = useState(['', '']);  // Al menos dos opciones por defecto\n  const [respuestaCorrecta, setRespuestaCorrecta] = useState('');\n\n  const handleChangeOpcion = (index, value) => {\n    const newOpciones = [...opciones];\n    newOpciones[index] = value;\n    setOpciones(newOpciones);\n  };\n\n  const addOpcion = () => {\n    setOpciones([...opciones, '']);\n  };\n\n  const removeOpcion = (index) => {\n    if (opciones.length > 2) {\n      const newOpciones = opciones.filter((_, i) => i !== index);\n      setOpciones(newOpciones);\n\n      if (opciones[index] === respuestaCorrecta) {\n        setRespuestaCorrecta('');\n      }\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n  \n    const opcionesData = opciones.map((texto) => ({\n      texto,\n      es_correcta: texto === respuestaCorrecta,\n    }));\n  \n    const preguntaData = {\n      texto: descripcion,\n      explicacion: explicacion, // Enviar la explicación\n      opciones: opcionesData,\n      examen: examenId,\n    };\n  \n    try {\n      await createPregunta(preguntaData);\n      navigate(`/examenes/${examenId}/preguntas`);\n    } catch (error) {\n      console.error('Error al crear la pregunta:', error);\n    }\n  };\n\n  return (\n    <div className=\"pregunta-form-container\">\n      <h2>Crear Nueva Pregunta</h2>\n      <form onSubmit={handleSubmit} className=\"pregunta-form\">\n        <div className=\"form-group\">\n          <label>Descripción de la Pregunta</label>\n          <textarea\n            value={descripcion}\n            onChange={(e) => setDescripcion(e.target.value)}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Opciones de Respuesta</label>\n          {opciones.map((opcion, index) => (\n            <div key={index} className=\"opcion\">\n              <input\n                type=\"text\"\n                value={opcion}\n                onChange={(e) => handleChangeOpcion(index, e.target.value)}\n                required\n              />\n              {opciones.length > 2 && (\n                <button\n                  type=\"button\"\n                  className=\"remove-opcion-button\"\n                  onClick={() => removeOpcion(index)}\n                >\n                  Eliminar\n                </button>\n              )}\n            </div>\n          ))}\n          <button type=\"button\" onClick={addOpcion} className=\"add-opcion-button\">\n            Añadir Opción\n          </button>\n        </div>\n\n        <div className=\"form-group\">\n          <label>Respuesta Correcta</label>\n          <select\n            value={respuestaCorrecta}\n            onChange={(e) => setRespuestaCorrecta(e.target.value)}\n            required\n          >\n            <option value=\"\">Seleccione una opción</option>\n            {opciones.map((opcion, index) => (\n              <option key={index} value={opcion}>\n                {opcion}\n              </option>\n            ))}\n          </select>\n        </div>\n\n\n        <div className=\"form-group\">\n          <label>Explicación (opcional)</label>\n          <textarea\n            value={explicacion}\n            onChange={(e) => setExplicacion(e.target.value)} // Campo de texto para explicación\n          />\n        </div>\n\n        <button type=\"submit\" className=\"submit-button\">Crear Pregunta</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CrearPregunta;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}