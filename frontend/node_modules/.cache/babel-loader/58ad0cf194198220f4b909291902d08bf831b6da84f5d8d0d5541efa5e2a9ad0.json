{"ast":null,"code":"var _jsxFileName = \"/Users/JB/Documents/TFG/frontend/src/pages/ExamenList.js\",\n  _s = $RefreshSig$();\n// src/pages/ExamenList.js\n\nimport React, { useState, useEffect } from 'react';\nimport { getExamenes, deleteExamen } from '../services/examenService'; // Importamos deleteExamen correctamente\nimport ExamenCard from '../components/ExamenCard';\nimport './ExamenList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamenList = () => {\n  _s();\n  const [examenes, setExamenes] = useState([]); // Inicializar como un array vacío\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchExamenes = async () => {\n      try {\n        const response = await getExamenes();\n        setExamenes(response.data || []); // Asegurarse de que es un array\n        setLoading(false);\n      } catch (error) {\n        console.error('Error al obtener los exámenes:', error);\n        setExamenes([]); // En caso de error, mantener un array vacío\n        setLoading(false);\n      }\n    };\n    fetchExamenes();\n  }, []);\n  const handleDelete = async examenId => {\n    if (window.confirm('¿Estás seguro de que deseas eliminar este examen?')) {\n      try {\n        await deleteExamen(examenId); // Llamada al servicio para eliminar el examen\n        setExamenes(examenes.filter(examen => examen.id !== examenId)); // Eliminar el examen del estado local\n      } catch (error) {\n        console.error('Error al eliminar el examen:', error);\n      }\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando ex\\xE1menes...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"examen-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Ex\\xE1menes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), examenes.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay ex\\xE1menes disponibles.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : examenes.map(examen => /*#__PURE__*/_jsxDEV(ExamenCard, {\n      examen: examen,\n      handleDelete: handleDelete\n    }, examen.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamenList, \"a/nrPDuMGjSRU9LkwT/xYuVQ46g=\");\n_c = ExamenList;\nexport default ExamenList;\nvar _c;\n$RefreshReg$(_c, \"ExamenList\");","map":{"version":3,"names":["React","useState","useEffect","getExamenes","deleteExamen","ExamenCard","jsxDEV","_jsxDEV","ExamenList","_s","examenes","setExamenes","loading","setLoading","fetchExamenes","response","data","error","console","handleDelete","examenId","window","confirm","filter","examen","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","_c","$RefreshReg$"],"sources":["/Users/JB/Documents/TFG/frontend/src/pages/ExamenList.js"],"sourcesContent":["// src/pages/ExamenList.js\n\nimport React, { useState, useEffect } from 'react';\nimport { getExamenes, deleteExamen } from '../services/examenService';  // Importamos deleteExamen correctamente\nimport ExamenCard from '../components/ExamenCard';\nimport './ExamenList.css';\n\nconst ExamenList = () => {\n  const [examenes, setExamenes] = useState([]);  // Inicializar como un array vacío\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchExamenes = async () => {\n      try {\n        const response = await getExamenes();\n        setExamenes(response.data || []);  // Asegurarse de que es un array\n        setLoading(false);\n      } catch (error) {\n        console.error('Error al obtener los exámenes:', error);\n        setExamenes([]);  // En caso de error, mantener un array vacío\n        setLoading(false);\n      }\n    };\n\n    fetchExamenes();\n  }, []);\n\n  const handleDelete = async (examenId) => {\n    if (window.confirm('¿Estás seguro de que deseas eliminar este examen?')) {\n      try {\n        await deleteExamen(examenId);  // Llamada al servicio para eliminar el examen\n        setExamenes(examenes.filter((examen) => examen.id !== examenId));  // Eliminar el examen del estado local\n      } catch (error) {\n        console.error('Error al eliminar el examen:', error);\n      }\n    }\n  };\n\n  if (loading) {\n    return <div>Cargando exámenes...</div>;\n  }\n\n  return (\n    <div className=\"examen-list\">\n      <h2>Lista de Exámenes</h2>\n      {examenes.length === 0 ? (\n        <p>No hay exámenes disponibles.</p>\n      ) : (\n        examenes.map((examen) => (\n          <ExamenCard key={examen.id} examen={examen} handleDelete={handleDelete} />\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default ExamenList;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,YAAY,QAAQ,2BAA2B,CAAC,CAAE;AACxE,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;EAC/C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,WAAW,CAAC,CAAC;QACpCQ,WAAW,CAACI,QAAQ,CAACC,IAAI,IAAI,EAAE,CAAC,CAAC,CAAE;QACnCH,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDN,WAAW,CAAC,EAAE,CAAC,CAAC,CAAE;QAClBE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,YAAY,GAAG,MAAOC,QAAQ,IAAK;IACvC,IAAIC,MAAM,CAACC,OAAO,CAAC,mDAAmD,CAAC,EAAE;MACvE,IAAI;QACF,MAAMlB,YAAY,CAACgB,QAAQ,CAAC,CAAC,CAAE;QAC/BT,WAAW,CAACD,QAAQ,CAACa,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,EAAE,KAAKL,QAAQ,CAAC,CAAC,CAAC,CAAE;MACrE,CAAC,CAAC,OAAOH,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF;EACF,CAAC;EAED,IAAIL,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAmB,QAAA,EAAK;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACxC;EAEA,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,aAAa;IAAAL,QAAA,gBAC1BnB,OAAA;MAAAmB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzBpB,QAAQ,CAACsB,MAAM,KAAK,CAAC,gBACpBzB,OAAA;MAAAmB,QAAA,EAAG;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAEnCpB,QAAQ,CAACuB,GAAG,CAAET,MAAM,iBAClBjB,OAAA,CAACF,UAAU;MAAiBmB,MAAM,EAAEA,MAAO;MAACL,YAAY,EAAEA;IAAa,GAAtDK,MAAM,CAACC,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA+C,CAC1E,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CA/CID,UAAU;AAAA0B,EAAA,GAAV1B,UAAU;AAiDhB,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}