{"ast":null,"code":"var _jsxFileName = \"/Users/JB/Documents/TFG/frontend/src/pages/ExamenList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ExamenCard from '../components/ExamenCard';\nimport { getExamenes, deleteExamen } from '../services/examenService'; // Asegúrate de importar deleteExamen\nimport { Link } from 'react-router-dom'; // Importa Link para la navegación\nimport './ExamenList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamenList = () => {\n  _s();\n  const [examenes, setExamenes] = useState([]);\n  const [modoIconos, setModoIconos] = useState(false); // Estado para cambiar entre iconos y lista\n\n  useEffect(() => {\n    const fetchExamenes = async () => {\n      const data = await getExamenes();\n      setExamenes(data);\n    };\n    fetchExamenes();\n  }, []);\n  const handleDelete = async id => {\n    if (window.confirm('¿Estás seguro de que deseas eliminar este examen?')) {\n      try {\n        await deleteExamen(id); // Llama al servicio para eliminar el examen\n        setExamenes(examenes.filter(examen => examen.id !== id)); // Actualiza el estado\n      } catch (error) {\n        console.error('Error al eliminar el examen:', error);\n      }\n    }\n  };\n\n  // Función para alternar entre los modos de lista e iconos\n  const alternarModo = () => {\n    setModoIconos(!modoIconos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"examen-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Ex\\xE1menes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alternar-modo-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: alternarModo,\n        className: \"alternar-modo-button\",\n        children: modoIconos ? 'Ver como Lista' : 'Ver como Iconos'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: modoIconos ? 'iconos-grid' : 'examenes-list',\n      children: examenes.map(examen => /*#__PURE__*/_jsxDEV(ExamenCard, {\n        examen: examen,\n        handleDelete: handleDelete,\n        modoIconos: modoIconos // Pasar el estado de iconos\n      }, examen.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crear-examen-container\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/crear-examen\",\n        className: \"crear-examen-button\",\n        children: \"Crear Nuevo Examen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamenList, \"ZNccMv8UY1u2i3lEEnOP0jtrzbE=\");\n_c = ExamenList;\nexport default ExamenList;\nvar _c;\n$RefreshReg$(_c, \"ExamenList\");","map":{"version":3,"names":["React","useEffect","useState","ExamenCard","getExamenes","deleteExamen","Link","jsxDEV","_jsxDEV","ExamenList","_s","examenes","setExamenes","modoIconos","setModoIconos","fetchExamenes","data","handleDelete","id","window","confirm","filter","examen","error","console","alternarModo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","to","_c","$RefreshReg$"],"sources":["/Users/JB/Documents/TFG/frontend/src/pages/ExamenList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ExamenCard from '../components/ExamenCard';\nimport { getExamenes, deleteExamen } from '../services/examenService'; // Asegúrate de importar deleteExamen\nimport { Link } from 'react-router-dom'; // Importa Link para la navegación\nimport './ExamenList.css';\n\nconst ExamenList = () => {\n  const [examenes, setExamenes] = useState([]);\n  const [modoIconos, setModoIconos] = useState(false); // Estado para cambiar entre iconos y lista\n\n  useEffect(() => {\n    const fetchExamenes = async () => {\n      const data = await getExamenes();\n      setExamenes(data);\n    };\n    fetchExamenes();\n  }, []);\n\n  const handleDelete = async (id) => {\n    if (window.confirm('¿Estás seguro de que deseas eliminar este examen?')) {\n      try {\n        await deleteExamen(id); // Llama al servicio para eliminar el examen\n        setExamenes(examenes.filter((examen) => examen.id !== id)); // Actualiza el estado\n      } catch (error) {\n        console.error('Error al eliminar el examen:', error);\n      }\n    }\n  };\n\n  // Función para alternar entre los modos de lista e iconos\n  const alternarModo = () => {\n    setModoIconos(!modoIconos);\n  };\n\n  return (\n    <div className=\"examen-list\">\n      <h2>Lista de Exámenes</h2>\n      \n      {/* Botón para cambiar entre lista e iconos */}\n      <div className=\"alternar-modo-container\">\n        <button onClick={alternarModo} className=\"alternar-modo-button\">\n          {modoIconos ? 'Ver como Lista' : 'Ver como Iconos'}\n        </button>\n      </div>\n\n      {/* Mostrar exámenes en formato lista o iconos */}\n      <div className={modoIconos ? 'iconos-grid' : 'examenes-list'}>\n        {examenes.map((examen) => (\n          <ExamenCard \n            key={examen.id} \n            examen={examen} \n            handleDelete={handleDelete} \n            modoIconos={modoIconos} // Pasar el estado de iconos\n          />\n        ))}\n      </div>\n\n      {/* Botón Crear Examen */}\n      <div className=\"crear-examen-container\">\n        <Link to=\"/crear-examen\" className=\"crear-examen-button\">\n          Crear Nuevo Examen\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default ExamenList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}