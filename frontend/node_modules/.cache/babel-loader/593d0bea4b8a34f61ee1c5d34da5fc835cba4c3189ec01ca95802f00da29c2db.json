{"ast":null,"code":"var _jsxFileName = \"/Users/JB/Documents/TFG/frontend/src/pages/Resultado.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { getResultado } from '../services/resultadoService'; // Asegúrate de tener este servicio implementado\nimport './Resultado.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Resultado = () => {\n  _s();\n  const {\n    examenId\n  } = useParams();\n  const navigate = useNavigate();\n  const [resultado, setResultado] = useState(null);\n  const [mostrarSoloErroneas, setMostrarSoloErroneas] = useState(false); // Estado para mostrar todas o solo las preguntas incorrectas\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchResultado = async () => {\n      try {\n        const response = await getResultado(examenId); // Llamar al servicio para obtener los resultados\n        const resultados = response.data;\n        if (resultados && resultados.length > 0) {\n          // obtener el último resultado:\n          const ultimoResultado = resultados[resultados.length - 1];\n          setResultado(ultimoResultado); // Almacenar el último resultado\n        } else {\n          setError('No se encontraron resultados para este examen');\n        }\n        setLoading(false);\n      } catch (err) {\n        setError('Error al obtener los resultados del examen');\n        setLoading(false);\n      }\n    };\n    fetchResultado();\n  }, [examenId]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando resultados...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Verifica si resultado y preguntas existen antes de mapear\n  if (!resultado || !resultado.preguntas) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No se encontraron resultados para este examen.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n  const handleMostrarErroneas = () => {\n    setMostrarSoloErroneas(true);\n  };\n  const handleMostrarTodas = () => {\n    setMostrarSoloErroneas(false);\n  };\n  const handleRepetirExamen = () => {\n    navigate(`/examenes/${examenId}/realizar`);\n  };\n  const preguntasFiltradas = mostrarSoloErroneas ? resultado.preguntas.filter(p => !p.correcta) : resultado.preguntas;\n  const totalPreguntas = resultado.respuestas ? Object.keys(resultado.respuestas).length : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resultado-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Resultados del Examen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), resultado ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Preguntas Correctas: \", resultado.puntuacion, \" de \", resultado.totalPreguntas]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Tiempo empleado: \", resultado.tiempo_empleado]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"opciones\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleMostrarTodas,\n          className: !mostrarSoloErroneas ? 'active' : '',\n          children: \"Ver todas las preguntas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleMostrarErroneas,\n          className: mostrarSoloErroneas ? 'active' : '',\n          children: \"Ver solo preguntas err\\xF3neas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"preguntas-list\",\n        children: preguntasFiltradas.map((pregunta, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"pregunta-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: pregunta.texto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"opciones-list\",\n            children: pregunta.opciones.map(opcion => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `opcion-item ${opcion.correcta ? 'correcta' : ''} ${opcion.seleccionada && !opcion.correcta ? 'incorrecta' : ''}`,\n              children: [opcion.texto, opcion.correcta && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"icono-correcto\",\n                children: \"\\u2714\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 43\n              }, this), opcion.seleccionada && !opcion.correcta && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"icono-incorrecto\",\n                children: \"\\u2718\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 67\n              }, this)]\n            }, opcion.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"repetir-examen-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRepetirExamen,\n          className: \"repetir-button\",\n          children: \"Repetir Examen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No se encontr\\xF3 ning\\xFAn resultado para este examen.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Resultado, \"+rUUkvBf4oohRtNoZVfsLukGy4o=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Resultado;\nexport default Resultado;\nvar _c;\n$RefreshReg$(_c, \"Resultado\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","useNavigate","getResultado","jsxDEV","_jsxDEV","Fragment","_Fragment","Resultado","_s","examenId","navigate","resultado","setResultado","mostrarSoloErroneas","setMostrarSoloErroneas","loading","setLoading","error","setError","fetchResultado","response","resultados","data","length","ultimoResultado","err","children","fileName","_jsxFileName","lineNumber","columnNumber","preguntas","handleMostrarErroneas","handleMostrarTodas","handleRepetirExamen","preguntasFiltradas","filter","p","correcta","totalPreguntas","respuestas","Object","keys","className","puntuacion","tiempo_empleado","onClick","map","pregunta","index","texto","opciones","opcion","seleccionada","id","_c","$RefreshReg$"],"sources":["/Users/JB/Documents/TFG/frontend/src/pages/Resultado.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { getResultado } from '../services/resultadoService'; // Asegúrate de tener este servicio implementado\nimport './Resultado.css';\n\nconst Resultado = () => {\n  const { examenId } = useParams();\n  const navigate = useNavigate();\n  const [resultado, setResultado] = useState(null);\n  const [mostrarSoloErroneas, setMostrarSoloErroneas] = useState(false); // Estado para mostrar todas o solo las preguntas incorrectas\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchResultado = async () => {\n      try {\n        const response = await getResultado(examenId); // Llamar al servicio para obtener los resultados\n        const resultados = response.data;\n  \n        if (resultados && resultados.length > 0) {\n          // obtener el último resultado:\n          const ultimoResultado = resultados[resultados.length - 1];\n          setResultado(ultimoResultado);  // Almacenar el último resultado\n        } else {\n          setError('No se encontraron resultados para este examen');\n        }\n  \n        setLoading(false);\n      } catch (err) {\n        setError('Error al obtener los resultados del examen');\n        setLoading(false);\n      }\n    };\n  \n    fetchResultado();\n  }, [examenId]);\n  \n\n  if (loading) {\n    return <div>Cargando resultados...</div>;\n  }\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  // Verifica si resultado y preguntas existen antes de mapear\n  if (!resultado || !resultado.preguntas) {\n    return <div>No se encontraron resultados para este examen.</div>;\n  }\n\n  const handleMostrarErroneas = () => {\n    setMostrarSoloErroneas(true);\n  };\n\n  const handleMostrarTodas = () => {\n    setMostrarSoloErroneas(false);\n  };\n\n  const handleRepetirExamen = () => {\n    navigate(`/examenes/${examenId}/realizar`);\n  };\n\n  const preguntasFiltradas = mostrarSoloErroneas\n    ? resultado.preguntas.filter(p => !p.correcta)\n    : resultado.preguntas;\n\n    const totalPreguntas = resultado.respuestas ? Object.keys(resultado.respuestas).length : 0;\n\n\n  return (\n    <div className=\"resultado-container\">\n      <h2>Resultados del Examen</h2>\n      {resultado ? (\n        <>\n          <p>Preguntas Correctas: {resultado.puntuacion} de {resultado.totalPreguntas}</p>\n          <p>Tiempo empleado: {resultado.tiempo_empleado}</p>\n\n          <div className=\"opciones\">\n            <button onClick={handleMostrarTodas} className={!mostrarSoloErroneas ? 'active' : ''}>\n              Ver todas las preguntas\n            </button>\n            <button onClick={handleMostrarErroneas} className={mostrarSoloErroneas ? 'active' : ''}>\n              Ver solo preguntas erróneas\n            </button>\n          </div>\n\n          <ul className=\"preguntas-list\">\n            {preguntasFiltradas.map((pregunta, index) => (\n              <li key={index} className=\"pregunta-item\">\n                <h3>{pregunta.texto}</h3>\n                <ul className=\"opciones-list\">\n                  {pregunta.opciones.map((opcion) => (\n                    <li\n                      key={opcion.id}\n                      className={`opcion-item ${opcion.correcta ? 'correcta' : ''} ${\n                        opcion.seleccionada && !opcion.correcta ? 'incorrecta' : ''\n                      }`}\n                    >\n                      {opcion.texto}\n                      {opcion.correcta && <span className=\"icono-correcto\">✔</span>}\n                      {opcion.seleccionada && !opcion.correcta && <span className=\"icono-incorrecto\">✘</span>}\n                    </li>\n                  ))}\n                </ul>\n              </li>\n            ))}\n          </ul>\n\n          <div className=\"repetir-examen-container\">\n            <button onClick={handleRepetirExamen} className=\"repetir-button\">\n              Repetir Examen\n            </button>\n          </div>\n        </>\n      ) : (\n        <p>No se encontró ningún resultado para este examen.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Resultado;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}