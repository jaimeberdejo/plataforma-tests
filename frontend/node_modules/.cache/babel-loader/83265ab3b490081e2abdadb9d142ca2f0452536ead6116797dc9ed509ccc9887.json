{"ast":null,"code":"var _jsxFileName = \"/Users/JB/Documents/TFG/frontend/src/pages/PreguntaList.js\",\n  _s = $RefreshSig$();\n// src/pages/PreguntaList.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { getPreguntasByExamen, deletePregunta } from '../services/preguntaService';\nimport './PreguntaList.css';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PreguntaList = () => {\n  _s();\n  const {\n    examenId\n  } = useParams();\n  const [preguntas, setPreguntas] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [colapsadas, setColapsadas] = useState({}); // Estado para manejar las preguntas colapsadas\n\n  useEffect(() => {\n    const fetchPreguntas = async () => {\n      try {\n        const response = await getPreguntasByExamen(examenId);\n        setPreguntas(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error al obtener las preguntas:', error);\n        setLoading(false);\n      }\n    };\n    fetchPreguntas();\n  }, [examenId]);\n  const handleDelete = async preguntaId => {\n    if (window.confirm('¿Estás seguro de que deseas eliminar esta pregunta?')) {\n      try {\n        await deletePregunta(preguntaId);\n        setPreguntas(preguntas.filter(pregunta => pregunta.id !== preguntaId));\n      } catch (error) {\n        console.error('Error al eliminar la pregunta:', error);\n      }\n    }\n  };\n\n  // Función para convertir índices a letras (a, b, c, ...)\n  const indexToLetter = index => {\n    return String.fromCharCode(97 + index) + ')'; // 97 es el código ASCII de 'a'\n  };\n\n  // Alternar la visibilidad de las respuestas\n  const toggleColapsar = preguntaId => {\n    setColapsadas(prevState => ({\n      ...prevState,\n      [preguntaId]: !prevState[preguntaId] // Cambiar el estado de colapsado/descolapsado\n    }));\n  };\n\n  // Manejar el reordenamiento de preguntas después de arrastrar\n  const handleOnDragEnd = result => {\n    if (!result.destination) return; // Si no se reordenó nada, salir\n\n    const reorderedPreguntas = Array.from(preguntas);\n    const [reorderedItem] = reorderedPreguntas.splice(result.source.index, 1);\n    reorderedPreguntas.splice(result.destination.index, 0, reorderedItem);\n    setPreguntas(reorderedPreguntas); // Actualizar el estado con las preguntas reordenadas\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando preguntas...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pregunta-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Preguntas del Examen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/examenes/${examenId}/crear-pregunta`,\n      className: \"create-button\",\n      children: \"Crear Nueva Pregunta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleOnDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"preguntas\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"ul\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [preguntas.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No hay preguntas en este examen.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this) : preguntas.map((pregunta, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: String(pregunta.id),\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"li\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              className: \"pregunta-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pregunta-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: pregunta.texto\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"actions\",\n                  children: [/*#__PURE__*/_jsxDEV(Link, {\n                    to: `/examenes/${examenId}/editar-pregunta/${pregunta.id}`,\n                    className: \"edit-button\",\n                    children: \"Editar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleDelete(pregunta.id),\n                    className: \"delete-button\",\n                    children: \"Eliminar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleColapsar(pregunta.id),\n                className: \"toggle-button\",\n                children: colapsadas[pregunta.id] ? 'Ocultar Respuestas' : 'Mostrar Respuestas'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 25\n              }, this), colapsadas[pregunta.id] && /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"respuestas-list\",\n                children: pregunta.opciones.map((opcion, opcionIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [indexToLetter(opcionIndex), \" \", opcion.texto]\n                }, opcionIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 31\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 23\n            }, this)\n          }, String(pregunta.id), false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(PreguntaList, \"WLLhgk2MNmzdwED4hps+CVaa3ss=\", false, function () {\n  return [useParams];\n});\n_c = PreguntaList;\nexport default PreguntaList;\nvar _c;\n$RefreshReg$(_c, \"PreguntaList\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","getPreguntasByExamen","deletePregunta","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","PreguntaList","_s","examenId","preguntas","setPreguntas","loading","setLoading","colapsadas","setColapsadas","fetchPreguntas","response","data","error","console","handleDelete","preguntaId","window","confirm","filter","pregunta","id","indexToLetter","index","String","fromCharCode","toggleColapsar","prevState","handleOnDragEnd","result","destination","reorderedPreguntas","Array","from","reorderedItem","splice","source","children","fileName","_jsxFileName","lineNumber","columnNumber","className","to","onDragEnd","droppableId","provided","droppableProps","ref","innerRef","length","map","draggableId","draggableProps","dragHandleProps","texto","onClick","opciones","opcion","opcionIndex","placeholder","_c","$RefreshReg$"],"sources":["/Users/JB/Documents/TFG/frontend/src/pages/PreguntaList.js"],"sourcesContent":["// src/pages/PreguntaList.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { getPreguntasByExamen, deletePregunta } from '../services/preguntaService';\nimport './PreguntaList.css';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nconst PreguntaList = () => {\n  const { examenId } = useParams();\n  const [preguntas, setPreguntas] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [colapsadas, setColapsadas] = useState({});  // Estado para manejar las preguntas colapsadas\n\n  useEffect(() => {\n    const fetchPreguntas = async () => {\n      try {\n        const response = await getPreguntasByExamen(examenId);\n        setPreguntas(response.data);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error al obtener las preguntas:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchPreguntas();\n  }, [examenId]);\n\n  const handleDelete = async (preguntaId) => {\n    if (window.confirm('¿Estás seguro de que deseas eliminar esta pregunta?')) {\n      try {\n        await deletePregunta(preguntaId);\n        setPreguntas(preguntas.filter((pregunta) => pregunta.id !== preguntaId));\n      } catch (error) {\n        console.error('Error al eliminar la pregunta:', error);\n      }\n    }\n  };\n\n  // Función para convertir índices a letras (a, b, c, ...)\n  const indexToLetter = (index) => {\n    return String.fromCharCode(97 + index) + ')';  // 97 es el código ASCII de 'a'\n  };\n\n  // Alternar la visibilidad de las respuestas\n  const toggleColapsar = (preguntaId) => {\n    setColapsadas((prevState) => ({\n      ...prevState,\n      [preguntaId]: !prevState[preguntaId]  // Cambiar el estado de colapsado/descolapsado\n    }));\n  };\n\n  // Manejar el reordenamiento de preguntas después de arrastrar\n  const handleOnDragEnd = (result) => {\n    if (!result.destination) return; // Si no se reordenó nada, salir\n\n    const reorderedPreguntas = Array.from(preguntas);\n    const [reorderedItem] = reorderedPreguntas.splice(result.source.index, 1);\n    reorderedPreguntas.splice(result.destination.index, 0, reorderedItem);\n\n    setPreguntas(reorderedPreguntas);  // Actualizar el estado con las preguntas reordenadas\n  };\n\n  if (loading) {\n    return <div>Cargando preguntas...</div>;\n  }\n\n  return (\n    <div className=\"pregunta-list-container\">\n      <h2>Preguntas del Examen</h2>\n      <Link to={`/examenes/${examenId}/crear-pregunta`} className=\"create-button\">\n        Crear Nueva Pregunta\n      </Link>\n\n      <DragDropContext onDragEnd={handleOnDragEnd}>\n        <Droppable droppableId=\"preguntas\">\n          {(provided) => (\n            <ul {...provided.droppableProps} ref={provided.innerRef}>\n              {preguntas.length === 0 ? (\n                <p>No hay preguntas en este examen.</p>\n              ) : (\n                preguntas.map((pregunta, index) => (\n                  <Draggable key={String(pregunta.id)} draggableId={String(pregunta.id)} index={index}>\n                    {(provided) => (\n                      <li\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        className=\"pregunta-card\"\n                      >\n                        <div className=\"pregunta-header\">\n                          <strong>{pregunta.texto}</strong>\n                          <div className=\"actions\">\n                            <Link to={`/examenes/${examenId}/editar-pregunta/${pregunta.id}`} className=\"edit-button\">\n                              Editar\n                            </Link>\n                            <button onClick={() => handleDelete(pregunta.id)} className=\"delete-button\">\n                              Eliminar\n                            </button>\n                          </div>\n                        </div>\n\n                        <button\n                          onClick={() => toggleColapsar(pregunta.id)}\n                          className=\"toggle-button\"\n                        >\n                          {colapsadas[pregunta.id] ? 'Ocultar Respuestas' : 'Mostrar Respuestas'}\n                        </button>\n\n                        {colapsadas[pregunta.id] && (\n                          <ul className=\"respuestas-list\">\n                            {pregunta.opciones.map((opcion, opcionIndex) => (\n                              <li key={opcionIndex}>\n                                {indexToLetter(opcionIndex)} {opcion.texto}\n                              </li>\n                            ))}\n                          </ul>\n                        )}\n                      </li>\n                    )}\n                  </Draggable>\n                ))\n              )}\n              {provided.placeholder}\n            </ul>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default PreguntaList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}