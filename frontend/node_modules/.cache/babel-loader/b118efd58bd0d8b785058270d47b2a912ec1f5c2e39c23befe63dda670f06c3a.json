{"ast":null,"code":"var _jsxFileName = \"/home/jaime/Documentos/TFG/plataforma-tests/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\n// src/context/AuthContext.js\nimport React, { createContext, useState, useEffect } from 'react';\n\n// Crea el contexto\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Proveedor del contexto\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false); // Estado de autenticaci칩n\n  const [userRole, setUserRole] = useState(null); // Estado del rol del usuario\n  const [userId, setUserId] = useState(null); // A침ade userId al estado\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const storedRole = localStorage.getItem('role'); // Obtener el rol guardado en localStorage\n    const storedUserId = localStorage.getItem('user_id');\n    console.log('Token en localStorage:', token);\n    console.log('ROL DE USUARIO: ', storedRole);\n    if (token) {\n      setIsAuthenticated(true);\n      setUserRole(storedRole); // Establece el rol almacenado si existe\n      setUserId(userId);\n    }\n  }, []);\n  const login = (token, role, user_id) => {\n    localStorage.setItem('token', token);\n    localStorage.setItem('role', role); // Almacena el rol en localStorage\n    localStorage.setItem('user_id', user_id);\n    console.log('Token y rol guardados en localStorage. Usuario autenticado como:', role);\n    setIsAuthenticated(true);\n    setUserRole(role); // Establece el rol actual\n  };\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userRole'); // Elimina el rol de localStorage\n    localStorage.removeItem('user_id');\n    setIsAuthenticated(false);\n    setUserRole(null); // Restablece el rol a null\n    console.log('Usuario desconectado y token y rol eliminados de localStorage');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      userRole,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"yhtj9EW4EHUF4DmgJ8h+S6WI6Y8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","userRole","setUserRole","userId","setUserId","token","localStorage","getItem","storedRole","storedUserId","console","log","login","role","user_id","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/jaime/Documentos/TFG/plataforma-tests/frontend/src/context/AuthContext.js"],"sourcesContent":["// src/context/AuthContext.js\r\nimport React, { createContext, useState, useEffect } from 'react';\r\n\r\n// Crea el contexto\r\nexport const AuthContext = createContext();\r\n\r\n// Proveedor del contexto\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);  // Estado de autenticaci칩n\r\n  const [userRole, setUserRole] = useState(null);  // Estado del rol del usuario\r\n  const [userId, setUserId] = useState(null); // A침ade userId al estado\r\n\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const storedRole = localStorage.getItem('role'); // Obtener el rol guardado en localStorage\r\n    const storedUserId = localStorage.getItem('user_id')\r\n    console.log('Token en localStorage:', token);\r\n    console.log('ROL DE USUARIO: ', storedRole);\r\n    if (token) {\r\n      setIsAuthenticated(true);\r\n      setUserRole(storedRole);  // Establece el rol almacenado si existe\r\n      setUserId(userId);\r\n    }\r\n  }, []);\r\n\r\n  const login = (token, role, user_id) => {\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('role', role); // Almacena el rol en localStorage\r\n    localStorage.setItem('user_id', user_id)\r\n    console.log('Token y rol guardados en localStorage. Usuario autenticado como:', role);\r\n    setIsAuthenticated(true);\r\n    setUserRole(role);  // Establece el rol actual\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('authToken');\r\n    localStorage.removeItem('userRole');  // Elimina el rol de localStorage\r\n    localStorage.removeItem('user_id');\r\n    setIsAuthenticated(false);\r\n    setUserRole(null);  // Restablece el rol a null\r\n    console.log('Usuario desconectado y token y rol eliminados de localStorage');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, userRole, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAE;EAChE,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EACjD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAG5CC,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IACjD,MAAME,YAAY,GAAGH,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;IACpDG,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEN,KAAK,CAAC;IAC5CK,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,UAAU,CAAC;IAC3C,IAAIH,KAAK,EAAE;MACTL,kBAAkB,CAAC,IAAI,CAAC;MACxBE,WAAW,CAACM,UAAU,CAAC,CAAC,CAAE;MAC1BJ,SAAS,CAACD,MAAM,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,KAAK,GAAGA,CAACP,KAAK,EAAEQ,IAAI,EAAEC,OAAO,KAAK;IACtCR,YAAY,CAACS,OAAO,CAAC,OAAO,EAAEV,KAAK,CAAC;IACpCC,YAAY,CAACS,OAAO,CAAC,MAAM,EAAEF,IAAI,CAAC,CAAC,CAAC;IACpCP,YAAY,CAACS,OAAO,CAAC,SAAS,EAAED,OAAO,CAAC;IACxCJ,OAAO,CAACC,GAAG,CAAC,kEAAkE,EAAEE,IAAI,CAAC;IACrFb,kBAAkB,CAAC,IAAI,CAAC;IACxBE,WAAW,CAACW,IAAI,CAAC,CAAC,CAAE;EACtB,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBV,YAAY,CAACW,UAAU,CAAC,WAAW,CAAC;IACpCX,YAAY,CAACW,UAAU,CAAC,UAAU,CAAC,CAAC,CAAE;IACtCX,YAAY,CAACW,UAAU,CAAC,SAAS,CAAC;IAClCjB,kBAAkB,CAAC,KAAK,CAAC;IACzBE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAE;IACpBQ,OAAO,CAACC,GAAG,CAAC,+DAA+D,CAAC;EAC9E,CAAC;EAED,oBACEjB,OAAA,CAACC,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAEpB,eAAe;MAAEE,QAAQ;MAAEW,KAAK;MAAEI;IAAO,CAAE;IAAAnB,QAAA,EACvEA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACzB,EAAA,CA1CWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}