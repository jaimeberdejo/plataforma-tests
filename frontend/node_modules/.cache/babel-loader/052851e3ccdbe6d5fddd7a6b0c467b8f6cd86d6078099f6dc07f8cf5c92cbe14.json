{"ast":null,"code":"var _jsxFileName = \"/Users/JB/Documents/TFG/frontend/src/pages/PreguntaList.js\",\n  _s = $RefreshSig$();\n// src/pages/PreguntaList.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { getPreguntasByExamen, deletePregunta } from '../services/preguntaService';\nimport { getExamenById } from '../services/examenService';\nimport './PreguntaList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PreguntaList = () => {\n  _s();\n  const {\n    examenId\n  } = useParams();\n  const [preguntas, setPreguntas] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [colapsadas, setColapsadas] = useState({}); // Estado para manejar las preguntas colapsadas\n\n  useEffect(() => {\n    const fetchPreguntas = async () => {\n      try {\n        const response = await getPreguntasByExamen(examenId);\n        setPreguntas(response.data);\n        setLoading(false);\n        const examenData = await getExamenById(examenId); // Obtener el examen por su ID\n        setExamen(examenData); // Guardar los datos del examen, incluyendo el nombre\n      } catch (error) {\n        console.error('Error al obtener las preguntas:', error);\n        setLoading(false);\n      }\n    };\n    fetchPreguntas();\n  }, [examenId]);\n  const handleDelete = async preguntaId => {\n    if (window.confirm('¿Estás seguro de que deseas eliminar esta pregunta?')) {\n      try {\n        await deletePregunta(preguntaId);\n        setPreguntas(preguntas.filter(pregunta => pregunta.id !== preguntaId));\n      } catch (error) {\n        console.error('Error al eliminar la pregunta:', error);\n      }\n    }\n  };\n\n  // Función para convertir índices a letras (a, b, c, ...)\n  const indexToLetter = index => {\n    return String.fromCharCode(97 + index) + ')'; // 97 es el código ASCII de 'a'\n  };\n\n  // Alternar la visibilidad de las respuestas\n  const toggleColapsar = preguntaId => {\n    setColapsadas(prevState => ({\n      ...prevState,\n      [preguntaId]: !prevState[preguntaId] // Cambiar el estado de colapsado/descolapsado\n    }));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando preguntas...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pregunta-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Preguntas de \", examen ? examen.nombre : 'Desconocido']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: `/examenes/${examenId}/crear-pregunta`,\n      className: \"create-button\",\n      children: \"Crear Nueva Pregunta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: preguntas.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay preguntas en este examen.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this) : preguntas.map(pregunta => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"pregunta-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pregunta-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: pregunta.texto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"actions\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/examenes/${examenId}/editar-pregunta/${pregunta.id}`,\n              className: \"edit-button\",\n              children: \"Editar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(pregunta.id),\n              className: \"delete-button\",\n              children: \"Eliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => toggleColapsar(pregunta.id),\n          className: \"toggle-button\",\n          children: colapsadas[pregunta.id] ? 'Ocultar Respuestas' : 'Mostrar Respuestas'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), colapsadas[pregunta.id] && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"respuestas-list\",\n          children: pregunta.opciones.map((opcion, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [indexToLetter(index), \" \", opcion.texto]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)]\n      }, pregunta.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(PreguntaList, \"WLLhgk2MNmzdwED4hps+CVaa3ss=\", false, function () {\n  return [useParams];\n});\n_c = PreguntaList;\nexport default PreguntaList;\nvar _c;\n$RefreshReg$(_c, \"PreguntaList\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","getPreguntasByExamen","deletePregunta","getExamenById","jsxDEV","_jsxDEV","PreguntaList","_s","examenId","preguntas","setPreguntas","loading","setLoading","colapsadas","setColapsadas","fetchPreguntas","response","data","examenData","setExamen","error","console","handleDelete","preguntaId","window","confirm","filter","pregunta","id","indexToLetter","index","String","fromCharCode","toggleColapsar","prevState","children","fileName","_jsxFileName","lineNumber","columnNumber","className","examen","nombre","to","length","map","texto","onClick","opciones","opcion","_c","$RefreshReg$"],"sources":["/Users/JB/Documents/TFG/frontend/src/pages/PreguntaList.js"],"sourcesContent":["// src/pages/PreguntaList.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { getPreguntasByExamen, deletePregunta } from '../services/preguntaService';\nimport { getExamenById } from '../services/examenService'; \nimport './PreguntaList.css';\n\nconst PreguntaList = () => {\n  const { examenId } = useParams();\n  const [preguntas, setPreguntas] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [colapsadas, setColapsadas] = useState({});  // Estado para manejar las preguntas colapsadas\n\n  useEffect(() => {\n    const fetchPreguntas = async () => {\n      try {\n        const response = await getPreguntasByExamen(examenId);\n        setPreguntas(response.data);\n        setLoading(false);\n\n        const examenData = await getExamenById(examenId); // Obtener el examen por su ID\n        setExamen(examenData); // Guardar los datos del examen, incluyendo el nombre\n\n      } catch (error) {\n        console.error('Error al obtener las preguntas:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchPreguntas();\n  }, [examenId]);\n\n  const handleDelete = async (preguntaId) => {\n    if (window.confirm('¿Estás seguro de que deseas eliminar esta pregunta?')) {\n      try {\n        await deletePregunta(preguntaId);\n        setPreguntas(preguntas.filter((pregunta) => pregunta.id !== preguntaId));\n      } catch (error) {\n        console.error('Error al eliminar la pregunta:', error);\n      }\n    }\n  };\n\n  // Función para convertir índices a letras (a, b, c, ...)\n  const indexToLetter = (index) => {\n    return String.fromCharCode(97 + index) + ')';  // 97 es el código ASCII de 'a'\n  };\n\n  // Alternar la visibilidad de las respuestas\n  const toggleColapsar = (preguntaId) => {\n    setColapsadas((prevState) => ({\n      ...prevState,\n      [preguntaId]: !prevState[preguntaId]  // Cambiar el estado de colapsado/descolapsado\n    }));\n  };\n\n  if (loading) {\n    return <div>Cargando preguntas...</div>;\n  }\n\n  return (\n    <div className=\"pregunta-list-container\">\n      <h2>Preguntas de {examen ? examen.nombre : 'Desconocido'}</h2>\n      <Link to={`/examenes/${examenId}/crear-pregunta`} className=\"create-button\">\n        Crear Nueva Pregunta\n      </Link>\n      <ul>\n        {preguntas.length === 0 ? (\n          <p>No hay preguntas en este examen.</p>\n        ) : (\n          preguntas.map((pregunta) => (\n            <li key={pregunta.id} className=\"pregunta-card\">\n              <div className=\"pregunta-header\">\n                <strong>{pregunta.texto}</strong>\n                <div className=\"actions\">\n                  <Link to={`/examenes/${examenId}/editar-pregunta/${pregunta.id}`} className=\"edit-button\">\n                    Editar\n                  </Link>\n                  <button onClick={() => handleDelete(pregunta.id)} className=\"delete-button\">\n                    Eliminar\n                  </button>\n                </div>\n              </div>\n\n              <button\n                onClick={() => toggleColapsar(pregunta.id)}\n                className=\"toggle-button\"\n              >\n                {colapsadas[pregunta.id] ? 'Ocultar Respuestas' : 'Mostrar Respuestas'}\n              </button>\n\n              {colapsadas[pregunta.id] && (\n                <ul className=\"respuestas-list\">\n                  {pregunta.opciones.map((opcion, index) => (\n                    <li key={index}>\n                      {indexToLetter(index)} {opcion.texto}\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default PreguntaList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}