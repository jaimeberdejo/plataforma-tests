{"ast":null,"code":"// src/services/examenService.js\n\nimport axios from 'axios';\nconst API_URL = 'http://127.0.0.1:8000/gestion/api/';\n\n// Función para obtener el token del localStorage\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem('token');\n  console.log(\"Token en Auth Headers:\", token); // Verifica que el token esté presente\n  return token ? {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  } : {};\n};\nexport const getExamenes = async () => {\n  try {\n    const response = await axios.get(`${API_URL}examenes/`, getAuthHeaders());\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener los exámenes:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const getExamenById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}examenes/${id}/`, getAuthHeaders());\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener el examen:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const createExamen = async examenData => {\n  try {\n    const response = await axios.post(`${API_URL}examenes/`, examenData, getAuthHeaders());\n    return response.data;\n  } catch (error) {\n    console.error('Error en la creación del examen:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const updateExamen = async (id, examenData) => {\n  try {\n    const response = await axios.put(`${API_URL}examenes/${id}/`, examenData, getAuthHeaders());\n    return response.data;\n  } catch (error) {\n    console.error('Error en la actualización del examen:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const deleteExamen = async id => {\n  try {\n    const response = await axios.delete(`${API_URL}examenes/${id}/`, getAuthHeaders());\n    return response.data;\n  } catch (error) {\n    console.error('Error al eliminar el examen:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\nexport const getPreguntasByExamen = async examenId => {\n  try {\n    const response = await axios.get(`${API_URL}examenes/${examenId}/preguntas`, getAuthHeaders());\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener las preguntas:\", error.response ? error.response.data : error.message);\n    return {\n      data: []\n    }; // Devuelve un array vacío en caso de error\n  }\n};\nexport const getResultadoExamen = async resultadoId => {\n  return await axios.get(`${API_URL}resultados/${resultadoId}/`);\n};\nexport const enviarRespuestas = async (examenId, respuestasJSON) => {\n  try {\n    const response = await axios.post(`http://localhost:8000/gestion/api/examenes/${examenId}/resultados/`, respuestasJSON, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error al enviar las respuestas:', error);\n    throw error;\n  }\n};\nexport const uploadTxtExamen = async formData => {\n  return axios.post('http://localhost:8000/gestion/api/uploadtxt/', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n};","map":{"version":3,"names":["axios","API_URL","getAuthHeaders","token","localStorage","getItem","console","log","headers","Authorization","getExamenes","response","get","data","error","message","getExamenById","id","createExamen","examenData","post","updateExamen","put","deleteExamen","delete","getPreguntasByExamen","examenId","getResultadoExamen","resultadoId","enviarRespuestas","respuestasJSON","uploadTxtExamen","formData"],"sources":["/home/jaime/Documentos/TFG/plataforma-tests/frontend/src/services/examenService.js"],"sourcesContent":["// src/services/examenService.js\n\nimport axios from 'axios';\n\nconst API_URL = 'http://127.0.0.1:8000/gestion/api/';\n\n// Función para obtener el token del localStorage\nconst getAuthHeaders = () => {\n  const token = localStorage.getItem('token');\n  console.log(\"Token en Auth Headers:\", token); // Verifica que el token esté presente\n  return token ? { headers: { Authorization: `Bearer ${token}` } } : {};\n};\n\n\nexport const getExamenes = async () => {\n  try {\n    const response = await axios.get(`${API_URL}examenes/`, getAuthHeaders());\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener los exámenes:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\nexport const getExamenById = async (id) => {\n  try {\n    const response = await axios.get(`${API_URL}examenes/${id}/`, getAuthHeaders());\n    return response.data;\n  } catch (error) {\n    console.error('Error al obtener el examen:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\nexport const createExamen = async (examenData) => {\n  try {\n    const response = await axios.post(`${API_URL}examenes/`, examenData, getAuthHeaders());\n    return response.data;\n  } catch (error) {\n    console.error('Error en la creación del examen:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\nexport const updateExamen = async (id, examenData) => {\n  try {\n    const response = await axios.put(`${API_URL}examenes/${id}/`, examenData, getAuthHeaders());\n    return response.data;\n  } catch (error) {\n    console.error('Error en la actualización del examen:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\nexport const deleteExamen = async (id) => {\n  try {\n    const response = await axios.delete(`${API_URL}examenes/${id}/`, getAuthHeaders());\n    return response.data;\n  } catch (error) {\n    console.error('Error al eliminar el examen:', error.response ? error.response.data : error.message);\n    throw error;\n  }\n};\n\nexport const getPreguntasByExamen = async (examenId) => {\n  try {\n    const response = await axios.get(`${API_URL}examenes/${examenId}/preguntas`, getAuthHeaders());\n    return response.data;\n  } catch (error) {\n    console.error(\"Error al obtener las preguntas:\", error.response ? error.response.data : error.message);\n    return { data: [] }; // Devuelve un array vacío en caso de error\n  }\n};\n\n\nexport const getResultadoExamen = async (resultadoId) => {\n  return await axios.get(`${API_URL}resultados/${resultadoId}/`);\n};\n\n\n\n\nexport const enviarRespuestas = async (examenId, respuestasJSON) => {\n  try {\n    const response = await axios.post(`http://localhost:8000/gestion/api/examenes/${examenId}/resultados/`, respuestasJSON, {\n      headers: {\n        'Content-Type': 'application/json', \n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error al enviar las respuestas:', error);\n    throw error;\n  }\n};\n\n\n\nexport const uploadTxtExamen = async (formData) => {\n  return axios.post('http://localhost:8000/gestion/api/uploadtxt/', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n    },\n  });\n};\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,oCAAoC;;AAEpD;AACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3CC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEJ,KAAK,CAAC,CAAC,CAAC;EAC9C,OAAOA,KAAK,GAAG;IAAEK,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUN,KAAK;IAAG;EAAE,CAAC,GAAG,CAAC,CAAC;AACvE,CAAC;AAGD,OAAO,MAAMO,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,GAAGX,OAAO,WAAW,EAAEC,cAAc,CAAC,CAAC,CAAC;IACzE,OAAOS,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdR,OAAO,CAACQ,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAC;IACrG,MAAMD,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAOC,EAAE,IAAK;EACzC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,GAAGX,OAAO,YAAYgB,EAAE,GAAG,EAAEf,cAAc,CAAC,CAAC,CAAC;IAC/E,OAAOS,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdR,OAAO,CAACQ,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAC;IAClG,MAAMD,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMI,YAAY,GAAG,MAAOC,UAAU,IAAK;EAChD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMX,KAAK,CAACoB,IAAI,CAAC,GAAGnB,OAAO,WAAW,EAAEkB,UAAU,EAAEjB,cAAc,CAAC,CAAC,CAAC;IACtF,OAAOS,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdR,OAAO,CAACQ,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAC;IACvG,MAAMD,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMO,YAAY,GAAG,MAAAA,CAAOJ,EAAE,EAAEE,UAAU,KAAK;EACpD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMX,KAAK,CAACsB,GAAG,CAAC,GAAGrB,OAAO,YAAYgB,EAAE,GAAG,EAAEE,UAAU,EAAEjB,cAAc,CAAC,CAAC,CAAC;IAC3F,OAAOS,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdR,OAAO,CAACQ,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAC;IAC5G,MAAMD,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMS,YAAY,GAAG,MAAON,EAAE,IAAK;EACxC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMX,KAAK,CAACwB,MAAM,CAAC,GAAGvB,OAAO,YAAYgB,EAAE,GAAG,EAAEf,cAAc,CAAC,CAAC,CAAC;IAClF,OAAOS,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdR,OAAO,CAACQ,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAC;IACnG,MAAMD,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMW,oBAAoB,GAAG,MAAOC,QAAQ,IAAK;EACtD,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,GAAGX,OAAO,YAAYyB,QAAQ,YAAY,EAAExB,cAAc,CAAC,CAAC,CAAC;IAC9F,OAAOS,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdR,OAAO,CAACQ,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACH,QAAQ,GAAGG,KAAK,CAACH,QAAQ,CAACE,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAC;IACtG,OAAO;MAAEF,IAAI,EAAE;IAAG,CAAC,CAAC,CAAC;EACvB;AACF,CAAC;AAGD,OAAO,MAAMc,kBAAkB,GAAG,MAAOC,WAAW,IAAK;EACvD,OAAO,MAAM5B,KAAK,CAACY,GAAG,CAAC,GAAGX,OAAO,cAAc2B,WAAW,GAAG,CAAC;AAChE,CAAC;AAKD,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAOH,QAAQ,EAAEI,cAAc,KAAK;EAClE,IAAI;IACF,MAAMnB,QAAQ,GAAG,MAAMX,KAAK,CAACoB,IAAI,CAAC,8CAA8CM,QAAQ,cAAc,EAAEI,cAAc,EAAE;MACtHtB,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdR,OAAO,CAACQ,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK;EACb;AACF,CAAC;AAID,OAAO,MAAMiB,eAAe,GAAG,MAAOC,QAAQ,IAAK;EACjD,OAAOhC,KAAK,CAACoB,IAAI,CAAC,8CAA8C,EAAEY,QAAQ,EAAE;IAC1ExB,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}