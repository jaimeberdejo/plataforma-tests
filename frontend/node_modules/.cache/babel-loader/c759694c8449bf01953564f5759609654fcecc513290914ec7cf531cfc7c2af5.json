{"ast":null,"code":"var _jsxFileName = \"/home/jaime/Documentos/TFG/plataforma-tests/frontend/src/pages/EditarPregunta.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getPreguntaById, updatePregunta } from '../services/preguntaService';\nimport './PreguntaForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditarPregunta = ({\n  examenId,\n  preguntaId,\n  closeModal,\n  refreshPreguntas\n}) => {\n  _s();\n  const [texto, setTexto] = useState('');\n  const [explicacion, setExplicacion] = useState('');\n  const [opciones, setOpciones] = useState([]);\n  const [respuestaCorrecta, setRespuestaCorrecta] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchPregunta = async () => {\n      try {\n        const response = await getPreguntaById(preguntaId);\n        const pregunta = response.data;\n        setTexto(pregunta.texto);\n        setExplicacion(pregunta.explicacion || '');\n        setOpciones(pregunta.opciones);\n        const correcta = pregunta.opciones.find(opcion => opcion.es_correcta);\n        setRespuestaCorrecta(correcta ? correcta.texto : '');\n        setLoading(false);\n      } catch (error) {\n        console.error('Error al cargar la pregunta:', error);\n        setLoading(false);\n      }\n    };\n    fetchPregunta();\n  }, [preguntaId]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const opcionesData = opciones.map(opcion => ({\n      texto: opcion.texto,\n      es_correcta: opcion.texto === respuestaCorrecta\n    }));\n    const preguntaData = {\n      texto,\n      explicacion,\n      opciones: opcionesData,\n      examen: examenId\n    };\n    try {\n      await updatePregunta(preguntaId, preguntaData);\n      refreshPreguntas(); // Refresca las preguntas en PreguntaList\n      closeModal(); // Cierra el modal\n    } catch (error) {\n      console.error('Error al actualizar la pregunta:', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando datos de la pregunta...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pregunta-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Editar Pregunta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"pregunta-form\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Guardar Cambios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(EditarPregunta, \"xxAKwQedLMQQfqEzV2xVSd7n5J0=\");\n_c = EditarPregunta;\nexport default EditarPregunta;\nvar _c;\n$RefreshReg$(_c, \"EditarPregunta\");","map":{"version":3,"names":["React","useState","useEffect","getPreguntaById","updatePregunta","jsxDEV","_jsxDEV","EditarPregunta","examenId","preguntaId","closeModal","refreshPreguntas","_s","texto","setTexto","explicacion","setExplicacion","opciones","setOpciones","respuestaCorrecta","setRespuestaCorrecta","loading","setLoading","fetchPregunta","response","pregunta","data","correcta","find","opcion","es_correcta","error","console","handleSubmit","e","preventDefault","opcionesData","map","preguntaData","examen","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","_c","$RefreshReg$"],"sources":["/home/jaime/Documentos/TFG/plataforma-tests/frontend/src/pages/EditarPregunta.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getPreguntaById, updatePregunta } from '../services/preguntaService';\nimport './PreguntaForm.css';\n\nconst EditarPregunta = ({ examenId, preguntaId, closeModal, refreshPreguntas }) => {\n  const [texto, setTexto] = useState('');\n  const [explicacion, setExplicacion] = useState('');\n  const [opciones, setOpciones] = useState([]);\n  const [respuestaCorrecta, setRespuestaCorrecta] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchPregunta = async () => {\n      try {\n        const response = await getPreguntaById(preguntaId);\n        const pregunta = response.data;\n        setTexto(pregunta.texto);\n        setExplicacion(pregunta.explicacion || '');\n        setOpciones(pregunta.opciones);\n        const correcta = pregunta.opciones.find(opcion => opcion.es_correcta);\n        setRespuestaCorrecta(correcta ? correcta.texto : '');\n        setLoading(false);\n      } catch (error) {\n        console.error('Error al cargar la pregunta:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchPregunta();\n  }, [preguntaId]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const opcionesData = opciones.map((opcion) => ({\n      texto: opcion.texto,\n      es_correcta: opcion.texto === respuestaCorrecta,\n    }));\n\n    const preguntaData = {\n      texto,\n      explicacion,\n      opciones: opcionesData,\n      examen: examenId,\n    };\n\n    try {\n      await updatePregunta(preguntaId, preguntaData);\n      refreshPreguntas();  // Refresca las preguntas en PreguntaList\n      closeModal();  // Cierra el modal\n    } catch (error) {\n      console.error('Error al actualizar la pregunta:', error);\n    }\n  };\n\n  if (loading) {\n    return <div>Cargando datos de la pregunta...</div>;\n  }\n\n  return (\n    <div className=\"pregunta-form-container\">\n      <h2>Editar Pregunta</h2>\n      <form onSubmit={handleSubmit} className=\"pregunta-form\">\n        {/* Campos del formulario */}\n        <button type=\"submit\" className=\"submit-button\">Guardar Cambios</button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditarPregunta;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}