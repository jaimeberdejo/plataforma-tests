{"ast":null,"code":"var _jsxFileName = \"/home/jaime/Documentos/TFG/plataforma-tests/frontend/src/pages/ExamenList.js\",\n  _s = $RefreshSig$();\n// src/pages/ExamenList.js\nimport React, { useEffect, useState, useContext } from 'react';\nimport ExamenCard from '../components/ExamenCard';\nimport CrearExamen from './CrearExamen';\nimport { getExamenesByUser, deleteExamen } from '../services/examenService';\nimport { AuthContext } from '../context/AuthContext';\nimport './ExamenList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamenList = () => {\n  _s();\n  const [examenes, setExamenes] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const {\n    userRole,\n    userId\n  } = useContext(AuthContext);\n  const fetchExamenes = async () => {\n    if (userId) {\n      try {\n        const data = await getExamenesByUser(userId);\n        setExamenes(data);\n      } catch (error) {\n        console.error('Error al obtener los exámenes:', error);\n      }\n    }\n  };\n  useEffect(() => {\n    fetchExamenes();\n  }, [userId]);\n  const handleDelete = async id => {\n    const confirmDelete = window.confirm('¿Estás seguro de que deseas eliminar este examen?');\n    if (confirmDelete) {\n      try {\n        await deleteExamen(id);\n        setExamenes(prevExamenes => prevExamenes.filter(examen => examen.id !== id));\n      } catch (error) {\n        console.error('Error al eliminar el examen:', error);\n      }\n    }\n  };\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"examen-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Ex\\xE1menes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), examenes.length > 0 ? examenes.map(examen => /*#__PURE__*/_jsxDEV(ExamenCard, {\n      examen: examen,\n      handleDelete: userRole !== 'alumno' ? handleDelete : null\n    }, examen.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No se encontraron ex\\xE1menes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), userRole !== 'alumno' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crear-examen-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleModal,\n        className: \"crear-examen-button\",\n        children: \"Crear Nuevo Examen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-modal-button\",\n          onClick: toggleModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CrearExamen, {\n          closeModal: toggleModal,\n          refreshExamenes: fetchExamenes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamenList, \"NvKVK6elxP+F2tvBXI4200x61Ic=\");\n_c = ExamenList;\nexport default ExamenList;\nvar _c;\n$RefreshReg$(_c, \"ExamenList\");","map":{"version":3,"names":["React","useEffect","useState","useContext","ExamenCard","CrearExamen","getExamenesByUser","deleteExamen","AuthContext","jsxDEV","_jsxDEV","ExamenList","_s","examenes","setExamenes","isModalOpen","setIsModalOpen","userRole","userId","fetchExamenes","data","error","console","handleDelete","id","confirmDelete","window","confirm","prevExamenes","filter","examen","toggleModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","closeModal","refreshExamenes","_c","$RefreshReg$"],"sources":["/home/jaime/Documentos/TFG/plataforma-tests/frontend/src/pages/ExamenList.js"],"sourcesContent":["// src/pages/ExamenList.js\nimport React, { useEffect, useState, useContext } from 'react';\nimport ExamenCard from '../components/ExamenCard';\nimport CrearExamen from './CrearExamen';\nimport { getExamenesByUser, deleteExamen } from '../services/examenService';\nimport { AuthContext } from '../context/AuthContext';\nimport './ExamenList.css';\n\nconst ExamenList = () => {\n  const [examenes, setExamenes] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const { userRole, userId } = useContext(AuthContext);\n\n  const fetchExamenes = async () => {\n    if (userId) {\n      try {\n        const data = await getExamenesByUser(userId);\n        setExamenes(data);\n      } catch (error) {\n        console.error('Error al obtener los exámenes:', error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchExamenes();\n  }, [userId]);\n\n  const handleDelete = async (id) => {\n    const confirmDelete = window.confirm('¿Estás seguro de que deseas eliminar este examen?');\n    if (confirmDelete) {\n      try {\n        await deleteExamen(id);\n        setExamenes((prevExamenes) => prevExamenes.filter((examen) => examen.id !== id));\n      } catch (error) {\n        console.error('Error al eliminar el examen:', error);\n      }\n    }\n  };\n\n  const toggleModal = () => {\n    setIsModalOpen(!isModalOpen);\n  };\n\n  return (\n    <div className=\"examen-list\">\n      <h2>Lista de Exámenes</h2>\n      {examenes.length > 0 ? (\n        examenes.map((examen) => (\n          <ExamenCard\n            key={examen.id}\n            examen={examen}\n            handleDelete={userRole !== 'alumno' ? handleDelete : null}\n          />\n        ))\n      ) : (\n        <p>No se encontraron exámenes.</p>\n      )}\n\n      {userRole !== 'alumno' && (\n        <div className=\"crear-examen-container\">\n          <button onClick={toggleModal} className=\"crear-examen-button\">\n            Crear Nuevo Examen\n          </button>\n        </div>\n      )}\n\n      {isModalOpen && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <button className=\"close-modal-button\" onClick={toggleModal}>×</button>\n            <CrearExamen closeModal={toggleModal} refreshExamenes={fetchExamenes} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ExamenList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}