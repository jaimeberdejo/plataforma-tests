{"ast":null,"code":"var _jsxFileName = \"/Users/JB/Documents/TFG/frontend/src/pages/CrearExamenTxt.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { uploadTxtExamen } from '../services/examenService'; // Servicio para cargar archivo\nimport './ExamenForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CrearExamenTxt = () => {\n  _s();\n  const [archivo, setArchivo] = useState(null); // Estado para almacenar el archivo seleccionado\n  const navigate = useNavigate();\n  const handleFileChange = e => {\n    setArchivo(e.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!archivo) {\n      alert('Por favor, selecciona un archivo .txt');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('archivo_txt', archivo); // Adjunta el archivo al FormData\n\n    try {\n      await uploadTxtExamen(formData); // Llamada al servicio que maneja la carga del archivo\n      navigate('/examenes'); // Redirige a la lista de ex치menes tras la creaci칩n\n    } catch (error) {\n      console.error('Error al cargar el archivo:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"examen-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Crear Examen desde un archivo .txt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"examen-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Seleccionar Archivo .txt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".txt\",\n          onChange: handleFileChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        children: \"Crear Examen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(CrearExamenTxt, \"6yR6eGPTOue+M0vxhjS2NM+CaEY=\", false, function () {\n  return [useNavigate];\n});\n_c = CrearExamenTxt;\nexport default CrearExamenTxt;\nvar _c;\n$RefreshReg$(_c, \"CrearExamenTxt\");","map":{"version":3,"names":["React","useState","useNavigate","uploadTxtExamen","jsxDEV","_jsxDEV","CrearExamenTxt","_s","archivo","setArchivo","navigate","handleFileChange","e","target","files","handleSubmit","preventDefault","alert","formData","FormData","append","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","required","_c","$RefreshReg$"],"sources":["/Users/JB/Documents/TFG/frontend/src/pages/CrearExamenTxt.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { uploadTxtExamen } from '../services/examenService';  // Servicio para cargar archivo\nimport './ExamenForm.css';\n\nconst CrearExamenTxt = () => {\n  const [archivo, setArchivo] = useState(null);  // Estado para almacenar el archivo seleccionado\n  const navigate = useNavigate();\n\n  const handleFileChange = (e) => {\n    setArchivo(e.target.files[0]);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!archivo) {\n      alert('Por favor, selecciona un archivo .txt');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('archivo_txt', archivo);  // Adjunta el archivo al FormData\n\n    try {\n      await uploadTxtExamen(formData);  // Llamada al servicio que maneja la carga del archivo\n      navigate('/examenes');  // Redirige a la lista de ex치menes tras la creaci칩n\n    } catch (error) {\n      console.error('Error al cargar el archivo:', error);\n    }\n  };\n\n  return (\n    <div className=\"examen-form-container\">\n      <h2>Crear Examen desde un archivo .txt</h2>\n      <form onSubmit={handleSubmit} className=\"examen-form\">\n        <div className=\"form-group\">\n          <label>Seleccionar Archivo .txt</label>\n          <input type=\"file\" accept=\".txt\" onChange={handleFileChange} required />\n        </div>\n        <button type=\"submit\" className=\"submit-btn\">Crear Examen</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CrearExamenTxt;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,eAAe,QAAQ,2BAA2B,CAAC,CAAE;AAC9D,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;EAC/C,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC9BH,UAAU,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,CAAC,IAAK;IAChCA,CAAC,CAACI,cAAc,CAAC,CAAC;IAElB,IAAI,CAACR,OAAO,EAAE;MACZS,KAAK,CAAC,uCAAuC,CAAC;MAC9C;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEZ,OAAO,CAAC,CAAC,CAAE;;IAE1C,IAAI;MACF,MAAML,eAAe,CAACe,QAAQ,CAAC,CAAC,CAAE;MAClCR,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAE;IAC1B,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKkB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCnB,OAAA;MAAAmB,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CvB,OAAA;MAAMwB,QAAQ,EAAEd,YAAa;MAACQ,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACnDnB,OAAA;QAAKkB,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBnB,OAAA;UAAAmB,QAAA,EAAO;QAAwB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvCvB,OAAA;UAAOyB,IAAI,EAAC,MAAM;UAACC,MAAM,EAAC,MAAM;UAACC,QAAQ,EAAErB,gBAAiB;UAACsB,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC,eACNvB,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAACP,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACrB,EAAA,CAvCID,cAAc;EAAA,QAEDJ,WAAW;AAAA;AAAAgC,EAAA,GAFxB5B,cAAc;AAyCpB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}