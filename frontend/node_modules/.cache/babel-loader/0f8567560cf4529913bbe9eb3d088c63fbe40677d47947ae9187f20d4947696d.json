{"ast":null,"code":"var _jsxFileName = \"/home/jaime/Documentos/TFG/plataforma-tests/frontend/src/pages/Alumnos.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { getAlumnos, addAlumno } from '../services/alumnoService'; // Define estas funciones en alumnoService.js\nimport './Alumnos.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alumnos = () => {\n  _s();\n  const [alumnos, setAlumnos] = useState([]);\n  const [nuevoAlumno, setNuevoAlumno] = useState('');\n  const {\n    userRole,\n    userId\n  } = useContext(AuthContext);\n\n  // Obtener la lista de alumnos del profesor al cargar el componente\n  useEffect(() => {\n    const fetchAlumnos = async () => {\n      if (userRole === 'profesor') {\n        try {\n          const alumnosData = await getAlumnos(userId);\n          setAlumnos(alumnosData);\n        } catch (error) {\n          console.error('Error al obtener la lista de alumnos:', error);\n        }\n      }\n    };\n    fetchAlumnos();\n  }, [userRole, userId]);\n\n  // Manejar la adición de un nuevo alumno\n  const handleAddAlumno = async () => {\n    if (nuevoAlumno.trim()) {\n      try {\n        const alumnoAgregado = await addAlumno(userId, nuevoAlumno.trim());\n        setAlumnos([...alumnos, alumnoAgregado]);\n        setNuevoAlumno('');\n      } catch (error) {\n        console.error('Error al agregar el alumno:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alumnos-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Alumnos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: alumnos.map(alumno => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: alumno.username\n      }, alumno.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-alumno-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nombre de usuario del alumno\",\n        value: nuevoAlumno,\n        onChange: e => setNuevoAlumno(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddAlumno,\n        children: \"A\\xF1adir Alumno\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Alumnos, \"/TWNTamDmFcLcb77R76eCA82/B8=\");\n_c = Alumnos;\nexport default Alumnos;\nvar _c;\n$RefreshReg$(_c, \"Alumnos\");","map":{"version":3,"names":["React","useEffect","useState","useContext","AuthContext","getAlumnos","addAlumno","jsxDEV","_jsxDEV","Alumnos","_s","alumnos","setAlumnos","nuevoAlumno","setNuevoAlumno","userRole","userId","fetchAlumnos","alumnosData","error","console","handleAddAlumno","trim","alumnoAgregado","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","alumno","username","id","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/jaime/Documentos/TFG/plataforma-tests/frontend/src/pages/Alumnos.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { getAlumnos, addAlumno } from '../services/alumnoService'; // Define estas funciones en alumnoService.js\r\nimport './Alumnos.css';\r\n\r\nconst Alumnos = () => {\r\n  const [alumnos, setAlumnos] = useState([]);\r\n  const [nuevoAlumno, setNuevoAlumno] = useState('');\r\n  const { userRole, userId } = useContext(AuthContext);\r\n\r\n  // Obtener la lista de alumnos del profesor al cargar el componente\r\n  useEffect(() => {\r\n    const fetchAlumnos = async () => {\r\n      if (userRole === 'profesor') {\r\n        try {\r\n          const alumnosData = await getAlumnos(userId);\r\n          setAlumnos(alumnosData);\r\n        } catch (error) {\r\n          console.error('Error al obtener la lista de alumnos:', error);\r\n        }\r\n      }\r\n    };\r\n    fetchAlumnos();\r\n  }, [userRole, userId]);\r\n\r\n  // Manejar la adición de un nuevo alumno\r\n  const handleAddAlumno = async () => {\r\n    if (nuevoAlumno.trim()) {\r\n      try {\r\n        const alumnoAgregado = await addAlumno(userId, nuevoAlumno.trim());\r\n        setAlumnos([...alumnos, alumnoAgregado]);\r\n        setNuevoAlumno('');\r\n      } catch (error) {\r\n        console.error('Error al agregar el alumno:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"alumnos-container\">\r\n      <h2>Lista de Alumnos</h2>\r\n      <ul>\r\n        {alumnos.map((alumno) => (\r\n          <li key={alumno.id}>{alumno.username}</li>\r\n        ))}\r\n      </ul>\r\n      <div className=\"add-alumno-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Nombre de usuario del alumno\"\r\n          value={nuevoAlumno}\r\n          onChange={(e) => setNuevoAlumno(e.target.value)}\r\n        />\r\n        <button onClick={handleAddAlumno}>Añadir Alumno</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alumnos;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}