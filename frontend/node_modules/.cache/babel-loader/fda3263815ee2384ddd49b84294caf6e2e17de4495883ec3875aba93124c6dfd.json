{"ast":null,"code":"var _jsxFileName = \"/home/jaime/Documentos/TFG/plataforma-tests/frontend/src/pages/ExamenList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport ExamenCard from '../components/ExamenCard';\nimport { getExamenesByUser, deleteExamen } from '../services/examenService';\nimport { AuthContext } from '../context/AuthContext';\nimport EditarExamen from '../components/EditarExamen'; // Importa el componente EditarExamen\nimport './ExamenList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExamenList = () => {\n  _s();\n  const [examenes, setExamenes] = useState([]);\n  const {\n    userRole,\n    userId\n  } = useContext(AuthContext);\n  const [selectedExamen, setSelectedExamen] = useState(null); // Controla el examen a editar\n\n  useEffect(() => {\n    const fetchExamenes = async () => {\n      if (userId) {\n        try {\n          const data = await getExamenesByUser(userId);\n          setExamenes(data);\n        } catch (error) {\n          console.error('Error al obtener los exámenes:', error);\n        }\n      }\n    };\n    fetchExamenes();\n  }, [userId]);\n  const handleDelete = async id => {\n    const confirmDelete = window.confirm('¿Estás seguro de que deseas eliminar este examen?');\n    if (confirmDelete) {\n      try {\n        await deleteExamen(id);\n        setExamenes(prevExamenes => prevExamenes.filter(examen => examen.id !== id));\n      } catch (error) {\n        console.error('Error al eliminar el examen:', error);\n      }\n    }\n  };\n  const openEditModal = examen => {\n    setSelectedExamen(examen);\n  };\n  const closeEditModal = () => {\n    setSelectedExamen(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"examen-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Ex\\xE1menes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), examenes.length > 0 ? examenes.map(examen => /*#__PURE__*/_jsxDEV(ExamenCard, {\n      examen: examen,\n      handleDelete: userRole !== 'alumno' ? handleDelete : null,\n      openEditModal: openEditModal // Pasa la función para abrir el modal\n    }, examen.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No se encontraron ex\\xE1menes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), selectedExamen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-modal-button\",\n          onClick: closeEditModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EditarExamen, {\n          examen: selectedExamen,\n          onClose: closeEditModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(ExamenList, \"JQEKxVqyFva/+JEI36Q4qgLVbWE=\");\n_c = ExamenList;\nexport default ExamenList;\nvar _c;\n$RefreshReg$(_c, \"ExamenList\");","map":{"version":3,"names":["React","useEffect","useState","useContext","ExamenCard","getExamenesByUser","deleteExamen","AuthContext","EditarExamen","jsxDEV","_jsxDEV","ExamenList","_s","examenes","setExamenes","userRole","userId","selectedExamen","setSelectedExamen","fetchExamenes","data","error","console","handleDelete","id","confirmDelete","window","confirm","prevExamenes","filter","examen","openEditModal","closeEditModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","onClose","_c","$RefreshReg$"],"sources":["/home/jaime/Documentos/TFG/plataforma-tests/frontend/src/pages/ExamenList.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport ExamenCard from '../components/ExamenCard';\nimport { getExamenesByUser, deleteExamen } from '../services/examenService';\nimport { AuthContext } from '../context/AuthContext';\nimport EditarExamen from '../components/EditarExamen'; // Importa el componente EditarExamen\nimport './ExamenList.css';\n\nconst ExamenList = () => {\n  const [examenes, setExamenes] = useState([]);\n  const { userRole, userId } = useContext(AuthContext);\n  const [selectedExamen, setSelectedExamen] = useState(null); // Controla el examen a editar\n\n  useEffect(() => {\n    const fetchExamenes = async () => {\n      if (userId) {\n        try {\n          const data = await getExamenesByUser(userId);\n          setExamenes(data);\n        } catch (error) {\n          console.error('Error al obtener los exámenes:', error);\n        }\n      }\n    };\n    fetchExamenes();\n  }, [userId]);\n\n  const handleDelete = async (id) => {\n    const confirmDelete = window.confirm('¿Estás seguro de que deseas eliminar este examen?');\n    if (confirmDelete) {\n      try {\n        await deleteExamen(id);\n        setExamenes((prevExamenes) => prevExamenes.filter((examen) => examen.id !== id));\n      } catch (error) {\n        console.error('Error al eliminar el examen:', error);\n      }\n    }\n  };\n\n  const openEditModal = (examen) => {\n    setSelectedExamen(examen);\n  };\n\n  const closeEditModal = () => {\n    setSelectedExamen(null);\n  };\n\n  return (\n    <div className=\"examen-list\">\n      <h2>Lista de Exámenes</h2>\n      {examenes.length > 0 ? (\n        examenes.map((examen) => (\n          <ExamenCard\n            key={examen.id}\n            examen={examen}\n            handleDelete={userRole !== 'alumno' ? handleDelete : null}\n            openEditModal={openEditModal} // Pasa la función para abrir el modal\n          />\n        ))\n      ) : (\n        <p>No se encontraron exámenes.</p>\n      )}\n\n      {/* Modal de edición que se centra en toda la pantalla */}\n      {selectedExamen && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <button className=\"close-modal-button\" onClick={closeEditModal}>\n              &times;\n            </button>\n            <EditarExamen examen={selectedExamen} onClose={closeEditModal} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ExamenList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}