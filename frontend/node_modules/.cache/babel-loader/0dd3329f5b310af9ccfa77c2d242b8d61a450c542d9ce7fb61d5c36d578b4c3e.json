{"ast":null,"code":"var _jsxFileName = \"/Users/JB/Documents/TFG/frontend/src/pages/EditarPregunta.js\",\n  _s = $RefreshSig$();\n// src/pages/EditarPregunta.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { getPreguntaById, updatePregunta } from '../services/preguntaService';\nimport './PreguntaForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditarPregunta = () => {\n  _s();\n  const {\n    examenId,\n    preguntaId\n  } = useParams(); // Obtener los IDs del examen y la pregunta desde la URL\n  const navigate = useNavigate();\n  const [texto, setTexto] = useState(''); // Estado para el texto de la pregunta\n  const [opciones, setOpciones] = useState([]); // Estado para las opciones de respuesta\n  const [respuestaCorrecta, setRespuestaCorrecta] = useState(''); // Estado para la opción correcta\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchPregunta = async () => {\n      try {\n        const response = await getPreguntaById(preguntaId); // Obtener la pregunta por su ID\n        const pregunta = response.data;\n        setTexto(pregunta.texto);\n        setOpciones(pregunta.opciones);\n        const correcta = pregunta.opciones.find(opcion => opcion.es_correcta);\n        setRespuestaCorrecta(correcta ? correcta.texto : '');\n        setLoading(false);\n      } catch (error) {\n        console.error('Error al cargar la pregunta:', error);\n        setLoading(false);\n      }\n    };\n    fetchPregunta();\n  }, [preguntaId]);\n  const handleChangeOpcion = (index, value) => {\n    const newOpciones = [...opciones];\n    newOpciones[index].texto = value;\n    setOpciones(newOpciones);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const opcionesData = opciones.map(opcion => ({\n      texto: opcion.texto,\n      es_correcta: opcion.texto === respuestaCorrecta // Marcar la opción correcta\n    }));\n    const preguntaData = {\n      texto,\n      opciones: opcionesData,\n      examen: examenId // Asegúrate de que el ID del examen se incluya correctamente\n    };\n    try {\n      await updatePregunta(preguntaId, preguntaData);\n      navigate(`/examenes/${examenId}/preguntas`);\n    } catch (error) {\n      console.error('Error al actualizar la pregunta:', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cargando datos de la pregunta...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pregunta-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Editar Pregunta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"pregunta-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Descripci\\xF3n de la Pregunta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: texto,\n          onChange: e => setTexto(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Opciones de Respuesta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), opciones.map((opcion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"opcion\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: opcion.texto,\n            onChange: e => handleChangeOpcion(index, e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Respuesta Correcta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: respuestaCorrecta,\n          onChange: e => setRespuestaCorrecta(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleccione una opci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), opciones.map((opcion, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: opcion.texto,\n            children: opcion.texto\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Guardar Cambios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(EditarPregunta, \"FwieeDo3XNulhfBb0sj4EZ0lCrI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditarPregunta;\nexport default EditarPregunta;\nvar _c;\n$RefreshReg$(_c, \"EditarPregunta\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","getPreguntaById","updatePregunta","jsxDEV","_jsxDEV","EditarPregunta","_s","examenId","preguntaId","navigate","texto","setTexto","opciones","setOpciones","respuestaCorrecta","setRespuestaCorrecta","loading","setLoading","fetchPregunta","response","pregunta","data","correcta","find","opcion","es_correcta","error","console","handleChangeOpcion","index","value","newOpciones","handleSubmit","e","preventDefault","opcionesData","map","preguntaData","examen","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","onChange","target","required","type","_c","$RefreshReg$"],"sources":["/Users/JB/Documents/TFG/frontend/src/pages/EditarPregunta.js"],"sourcesContent":["// src/pages/EditarPregunta.js\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { getPreguntaById, updatePregunta } from '../services/preguntaService';\nimport './PreguntaForm.css';\n\nconst EditarPregunta = () => {\n  const { examenId, preguntaId } = useParams();  // Obtener los IDs del examen y la pregunta desde la URL\n  const navigate = useNavigate();\n\n  const [texto, setTexto] = useState('');  // Estado para el texto de la pregunta\n  const [opciones, setOpciones] = useState([]);  // Estado para las opciones de respuesta\n  const [respuestaCorrecta, setRespuestaCorrecta] = useState('');  // Estado para la opción correcta\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchPregunta = async () => {\n      try {\n        const response = await getPreguntaById(preguntaId);  // Obtener la pregunta por su ID\n        const pregunta = response.data;\n        setTexto(pregunta.texto);\n        setOpciones(pregunta.opciones);\n        const correcta = pregunta.opciones.find(opcion => opcion.es_correcta);\n        setRespuestaCorrecta(correcta ? correcta.texto : '');\n        setLoading(false);\n      } catch (error) {\n        console.error('Error al cargar la pregunta:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchPregunta();\n  }, [preguntaId]);\n\n  const handleChangeOpcion = (index, value) => {\n    const newOpciones = [...opciones];\n    newOpciones[index].texto = value;\n    setOpciones(newOpciones);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const opcionesData = opciones.map((opcion) => ({\n      texto: opcion.texto,\n      es_correcta: opcion.texto === respuestaCorrecta,  // Marcar la opción correcta\n    }));\n\n    const preguntaData = {\n      texto,\n      opciones: opcionesData,\n      examen: examenId,  // Asegúrate de que el ID del examen se incluya correctamente\n    };\n\n    try {\n      await updatePregunta(preguntaId, preguntaData);\n      navigate(`/examenes/${examenId}/preguntas`);\n    } catch (error) {\n      console.error('Error al actualizar la pregunta:', error);\n    }\n  };\n\n  if (loading) {\n    return <div>Cargando datos de la pregunta...</div>;\n  }\n\n  return (\n    <div className=\"pregunta-form-container\">\n      <h2>Editar Pregunta</h2>\n      <form onSubmit={handleSubmit} className=\"pregunta-form\">\n        <div className=\"form-group\">\n          <label>Descripción de la Pregunta</label>\n          <textarea\n            value={texto}\n            onChange={(e) => setTexto(e.target.value)}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Opciones de Respuesta</label>\n          {opciones.map((opcion, index) => (\n            <div key={index} className=\"opcion\">\n              <input\n                type=\"text\"\n                value={opcion.texto}\n                onChange={(e) => handleChangeOpcion(index, e.target.value)}\n                required\n              />\n            </div>\n          ))}\n        </div>\n\n        <div className=\"form-group\">\n          <label>Respuesta Correcta</label>\n          <select\n            value={respuestaCorrecta}\n            onChange={(e) => setRespuestaCorrecta(e.target.value)}\n            required\n          >\n            <option value=\"\">Seleccione una opción</option>\n            {opciones.map((opcion, index) => (\n              <option key={index} value={opcion.texto}>\n                {opcion.texto}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <button type=\"submit\" className=\"submit-button\">Guardar Cambios</button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditarPregunta;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}